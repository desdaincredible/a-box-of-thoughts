{"ast":null,"code":"var _jsxFileName = \"/Users/moosesdeuces/sei-june-bug/5-10-image-board-creator/image-board-creator/front-end/src/BoardContainer/BoardContainer.jsx\";\nimport React, { Component } from 'react';\nimport MakeBoard from './MakeBoard/MakeBoard';\nimport Search from './MakeBoard/Search';\nimport BoardDetail from './BoardDetail/BoardDetail';\n\nclass BoardContainer extends Component {\n  constructor() {\n    super();\n\n    this.getBoards = async () => {\n      const boards = await fetch('http://localhost:9000/boards', {\n        credentials: 'include'\n      });\n      const boardsJSON = await boards.json();\n      console.log(boardsJSON, 'boardsJson');\n      this.setState({\n        boards: boardsJSON.data,\n        images: [...boards.JSON.data]\n      });\n    };\n\n    this.createBoard = async formData => {\n      const newBoard = await fetch('http://localhost:9000/boards', {\n        credentials: 'include',\n        method: \"POST\",\n        body: JSON.stringify(formData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(newBoard, 'newBoard');\n      const parsedResponse = await newBoard.json();\n\n      if (newBoard.status === 200) {\n        this.setState({\n          boards: [...this.state.boards, parsedResponse] // images: [parsedResponse.images]\n\n        });\n      }\n    };\n\n    this.createImage = async query => {\n      const newImage = await fetch(\"https://api.unsplash.com/search/photos/?page=1&per_page=10&query=\".concat(query, \"&client_id=1fe232c10d045efb942c686798a897086057edb740c100d8ee47adf69d77c998\"), {\n        credentials: 'include',\n        method: \"POST\",\n        body: JSON.stringify(query),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const parsedResponse = await newImage.json();\n\n      if (newImage.status === 200) {\n        this.setState({\n          images: [...this.state.boards.image, parsedResponse]\n        });\n      }\n\n      console.log(this.state.boards, 'this.state.boards');\n      console.log(this.state.boards.images, 'this.state.boards.images');\n    };\n\n    this.state = {\n      boards: [],\n      images: []\n    };\n  }\n\n  componentDidMount() {\n    this.getBoards();\n  }\n\n  render() {\n    console.log(this.state.boards, 'this.state.boards BoardContainer');\n    console.log(this.state.images, 'this.state.images BoardContainer');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"BoardContainer\"), React.createElement(BoardDetail, {\n      boards: this.state.boards,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(MakeBoard, {\n      createBoard: this.createBoard,\n      createImage: this.createImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Search, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BoardContainer;","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/5-10-image-board-creator/image-board-creator/front-end/src/BoardContainer/BoardContainer.jsx"],"names":["React","Component","MakeBoard","Search","BoardDetail","BoardContainer","constructor","getBoards","boards","fetch","credentials","boardsJSON","json","console","log","setState","data","images","JSON","createBoard","formData","newBoard","method","body","stringify","headers","parsedResponse","status","state","createImage","query","newImage","image","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MakeBoard from './MakeBoard/MakeBoard';\nimport Search from './MakeBoard/Search';\nimport BoardDetail from './BoardDetail/BoardDetail';\n\nclass BoardContainer extends Component {\n    constructor(){\n        super();\n        this.state = {\n            boards: [],\n            images: []\n        }\n    }\n    componentDidMount(){\n        this.getBoards();\n    }\n    getBoards = async () => {\n        const boards = await fetch('http://localhost:9000/boards', {\n            credentials: 'include'\n        })\n        const boardsJSON = await boards.json();\n        console.log(boardsJSON, 'boardsJson')\n        this.setState({\n            boards: boardsJSON.data,\n            images: [...boards.JSON.data]\n        })\n    };\n    createBoard = async (formData) => {\n        const newBoard = await fetch('http://localhost:9000/boards', {\n            credentials: 'include',\n            method: \"POST\",\n            body: JSON.stringify(formData),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        console.log(newBoard, 'newBoard')\n        const parsedResponse = await newBoard.json();\n        if(newBoard.status === 200){\n            this.setState({\n                boards: [...this.state.boards, parsedResponse]\n                // images: [parsedResponse.images]\n            })\n        }\n    };\n    createImage = async (query) => {\n        const newImage = await fetch(`https://api.unsplash.com/search/photos/?page=1&per_page=10&query=${query}&client_id=1fe232c10d045efb942c686798a897086057edb740c100d8ee47adf69d77c998`, {\n            credentials: 'include',\n            method: \"POST\",\n            body: JSON.stringify(query),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        const parsedResponse = await newImage.json();\n        if(newImage.status === 200){\n            this.setState({\n                images: [...this.state.boards.image, parsedResponse]\n            })\n        }\n        console.log(this.state.boards, 'this.state.boards')\n        console.log(this.state.boards.images, 'this.state.boards.images')\n\n    };\n\n    render(){\n        console.log(this.state.boards, 'this.state.boards BoardContainer')\n        console.log(this.state.images, 'this.state.images BoardContainer')\n\n\n        return (\n            <div>\n            <h1>BoardContainer</h1>\n            <BoardDetail boards={ this.state.boards } />\n            <MakeBoard createBoard={ this.createBoard } createImage={ this.createImage } />\n            <Search />\n            </div>\n        )\n    }\n\n}\n\nexport default BoardContainer;"]},"metadata":{},"sourceType":"module"}