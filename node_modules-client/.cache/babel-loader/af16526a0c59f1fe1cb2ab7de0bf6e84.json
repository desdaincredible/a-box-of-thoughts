{"ast":null,"code":"var _jsxFileName = \"/Users/moosesdeuces/sei-june-bug/5-10-image-board-creator/image-board-creator/front-end/src/BoardContainer/BoardContainer.jsx\";\nimport React, { Component } from 'react';\nimport MakeBoard from './MakeBoard/MakeBoard';\nimport BoardDetail from './BoardDetail/BoardDetail';\n\nclass BoardContainer extends Component {\n  constructor() {\n    super();\n\n    this.getBoards = async () => {\n      const boards = await fetch('http://localhost:9000/boards', {\n        credentials: 'include'\n      });\n      const boardsJSON = await boards.json();\n      this.setState({\n        boards: boardsJSON.data\n      });\n    };\n\n    this.createBoard = async formData => {\n      const newBoard = await fetch('http://localhost:9000/boards', {\n        credentials: 'include',\n        method: \"POST\",\n        body: JSON.stringify(formData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }); // console.log(newBoard, 'newBoard')\n\n      const parsedResponse = await newBoard.json();\n\n      if (newBoard.status === 200) {\n        this.setState({\n          boards: [...this.state.boards, parsedResponse]\n        });\n      }\n    };\n\n    this.selectedImageStateChange = newState => {\n      this.setState({\n        selectedImage: newState.selectedImage\n      });\n    };\n\n    this.handleEditSubmit = () => {\n      this.toggle();\n      this.state.boards.map(board => {\n        if (board._id === this.state.id) {\n          this.updateBoard(board, board._id);\n        }\n      });\n      this.setState({\n        selectedImage: {}\n      });\n    };\n\n    this.updateBoard = async (foundBoard, id) => {\n      foundBoard.images.push(this.state.selectedImage);\n      const response = await fetch(\"http://localhost:9000/boards/\".concat(id), {\n        method: \"PUT\",\n        mode: 'cors',\n        body: JSON.stringify(foundBoard),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(response);\n    };\n\n    this.toggleClass = () => {\n      // console.log(this.state.classChange, 'toggle class');\n      this.setState({\n        classChange: true\n      });\n    };\n\n    this.handleImageClick = (e, image) => {\n      this.setState({\n        selectedImage: e\n      });\n      this.toggleClass();\n    };\n\n    this.addNewImageButtonClick = e => {\n      this.state.boards.map(board => {\n        this.setState({\n          id: e.target.id\n        });\n        this.toggle();\n      });\n    };\n\n    this.deleteBoard = () => {\n      console.log('delete successful');\n    };\n\n    this.handleDelete = e => {\n      this.state.boards.map(board => {\n        if (board._id === this.state.id) {\n          this.setState({\n            id: e.target.id\n          });\n        }\n      });\n    };\n\n    this.state = {\n      classChange: false,\n      modal: false,\n      boards: [],\n      selectedImage: {},\n      id: \"\"\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  componentDidMount() {\n    this.getBoards();\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    console.log(this.state.id);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"BoardContainer\"), React.createElement(BoardDetail, {\n      boards: this.state.boards,\n      addNewImageButtonClick: this.addNewImageButtonClick,\n      handleDelete: this.handleDelete,\n      deleteBoard: this.deleteBoard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(MakeBoard, {\n      createBoard: this.createBoard,\n      selectedImageStateChange: this.selectedImageStateChange,\n      handleImageClick: this.handleImageClick,\n      imageStateChange: this.imageStateChange,\n      updateBoard: this.updateBoard,\n      toggle: this.toggle,\n      modal: this.state.modal,\n      classChange: this.state.classChange,\n      handleEditSubmit: this.handleEditSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BoardContainer;","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/5-10-image-board-creator/image-board-creator/front-end/src/BoardContainer/BoardContainer.jsx"],"names":["React","Component","MakeBoard","BoardDetail","BoardContainer","constructor","getBoards","boards","fetch","credentials","boardsJSON","json","setState","data","createBoard","formData","newBoard","method","body","JSON","stringify","headers","parsedResponse","status","state","selectedImageStateChange","newState","selectedImage","handleEditSubmit","toggle","map","board","_id","id","updateBoard","foundBoard","images","push","response","mode","console","log","toggleClass","classChange","handleImageClick","e","image","addNewImageButtonClick","target","deleteBoard","handleDelete","modal","bind","componentDidMount","prevState","render","imageStateChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AACnCI,EAAAA,WAAW,GAAE;AACT;;AADS,SAcbC,SAda,GAcD,YAAY;AACpB,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AACvDC,QAAAA,WAAW,EAAE;AAD0C,OAAjC,CAA1B;AAGA,YAAMC,UAAU,GAAG,MAAMH,MAAM,CAACI,IAAP,EAAzB;AACA,WAAKC,QAAL,CAAc;AACVL,QAAAA,MAAM,EAAEG,UAAU,CAACG;AADT,OAAd;AAGH,KAtBY;;AAAA,SAuBbC,WAvBa,GAuBC,MAAOC,QAAP,IAAoB;AAC9B,YAAMC,QAAQ,GAAG,MAAMR,KAAK,CAAC,8BAAD,EAAiC;AACzDC,QAAAA,WAAW,EAAE,SAD4C;AAEzDQ,QAAAA,MAAM,EAAE,MAFiD;AAGzDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAHmD;AAIzDM,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAJgD,OAAjC,CAA5B,CAD8B,CAS9B;;AACA,YAAMC,cAAc,GAAG,MAAMN,QAAQ,CAACL,IAAT,EAA7B;;AACA,UAAGK,QAAQ,CAACO,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAKX,QAAL,CAAc;AACVL,UAAAA,MAAM,EAAE,CAAC,GAAG,KAAKiB,KAAL,CAAWjB,MAAf,EAAuBe,cAAvB;AADE,SAAd;AAGH;AACJ,KAvCY;;AAAA,SAwCbG,wBAxCa,GAwCeC,QAAD,IAAc;AACrC,WAAKd,QAAL,CAAc;AACVe,QAAAA,aAAa,EAAED,QAAQ,CAACC;AADd,OAAd;AAGH,KA5CY;;AAAA,SA6CbC,gBA7Ca,GA6CM,MAAK;AACpB,WAAKC,MAAL;AACA,WAAKL,KAAL,CAAWjB,MAAX,CAAkBuB,GAAlB,CAAuBC,KAAD,IAAW;AAC7B,YAAGA,KAAK,CAACC,GAAN,KAAc,KAAKR,KAAL,CAAWS,EAA5B,EAA+B;AAC3B,eAAKC,WAAL,CAAiBH,KAAjB,EAAwBA,KAAK,CAACC,GAA9B;AACH;AACJ,OAJD;AAKA,WAAKpB,QAAL,CAAc;AACVe,QAAAA,aAAa,EAAE;AADL,OAAd;AAGH,KAvDY;;AAAA,SAwDbO,WAxDa,GAwDC,OAAOC,UAAP,EAAmBF,EAAnB,KAA0B;AACpCE,MAAAA,UAAU,CAACC,MAAX,CAAkBC,IAAlB,CAAuB,KAAKb,KAAL,CAAWG,aAAlC;AACA,YAAMW,QAAQ,GAAG,MAAM9B,KAAK,wCAAiCyB,EAAjC,GAAuC;AAC/DhB,QAAAA,MAAM,EAAE,KADuD;AAE/DsB,QAAAA,IAAI,EAAE,MAFyD;AAG/DrB,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAee,UAAf,CAHyD;AAI/Dd,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAJsD,OAAvC,CAA5B;AAQAmB,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH,KAnEY;;AAAA,SAoEbI,WApEa,GAoEC,MAAM;AAChB;AACA,WAAK9B,QAAL,CAAc;AACV+B,QAAAA,WAAW,EAAE;AADH,OAAd;AAGH,KAzEY;;AAAA,SA0EbC,gBA1Ea,GA0EM,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC7B,WAAKlC,QAAL,CAAc;AACVe,QAAAA,aAAa,EAAEkB;AADL,OAAd;AAGA,WAAKH,WAAL;AACH,KA/EY;;AAAA,SAsFbK,sBAtFa,GAsFaF,CAAD,IAAO;AAC5B,WAAKrB,KAAL,CAAWjB,MAAX,CAAkBuB,GAAlB,CAAuBC,KAAD,IAAW;AAC7B,aAAKnB,QAAL,CAAc;AACVqB,UAAAA,EAAE,EAAEY,CAAC,CAACG,MAAF,CAASf;AADH,SAAd;AAGA,aAAKJ,MAAL;AACH,OALD;AAMH,KA7FY;;AAAA,SA8FboB,WA9Fa,GA8FC,MAAM;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEH,KAjGY;;AAAA,SAkGbS,YAlGa,GAkGGL,CAAD,IAAO;AAClB,WAAKrB,KAAL,CAAWjB,MAAX,CAAkBuB,GAAlB,CAAuBC,KAAD,IAAW;AAC7B,YAAGA,KAAK,CAACC,GAAN,KAAc,KAAKR,KAAL,CAAWS,EAA5B,EAA+B;AAC3B,eAAKrB,QAAL,CAAc;AACVqB,YAAAA,EAAE,EAAEY,CAAC,CAACG,MAAF,CAASf;AADH,WAAd;AAGH;AACJ,OAND;AAOH,KA1GY;;AAET,SAAKT,KAAL,GAAa;AACTmB,MAAAA,WAAW,EAAE,KADJ;AAETQ,MAAAA,KAAK,EAAE,KAFE;AAGT5C,MAAAA,MAAM,EAAE,EAHC;AAIToB,MAAAA,aAAa,EAAE,EAJN;AAKTM,MAAAA,EAAE,EAAE;AALK,KAAb;AAOA,SAAKJ,MAAL,GAAc,KAAKA,MAAL,CAAYuB,IAAZ,CAAiB,IAAjB,CAAd;AACH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,SAAK/C,SAAL;AACH;;AAmEDuB,EAAAA,MAAM,GAAE;AACJ,SAAKjB,QAAL,CAAc0C,SAAS,KAAK;AACxBH,MAAAA,KAAK,EAAE,CAACG,SAAS,CAACH;AADM,KAAL,CAAvB;AAIH;;AAsBDI,EAAAA,MAAM,GAAE;AACJf,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWS,EAAvB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,EAEA,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAG,KAAKT,KAAL,CAAWjB,MAAjC;AAA0C,MAAA,sBAAsB,EAAG,KAAKwC,sBAAxE;AAAiG,MAAA,YAAY,EAAG,KAAKG,YAArH;AAAoI,MAAA,WAAW,EAAG,KAAKD,WAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAG,KAAKnC,WAA9B;AAA4C,MAAA,wBAAwB,EAAG,KAAKW,wBAA5E;AACA,MAAA,gBAAgB,EAAG,KAAKmB,gBADxB;AAC2C,MAAA,gBAAgB,EAAG,KAAKY,gBADnE;AAEA,MAAA,WAAW,EAAG,KAAKtB,WAFnB;AAEiC,MAAA,MAAM,EAAG,KAAKL,MAF/C;AAEwD,MAAA,KAAK,EAAG,KAAKL,KAAL,CAAW2B,KAF3E;AAEmF,MAAA,WAAW,EAAG,KAAK3B,KAAL,CAAWmB,WAF5G;AAGA,MAAA,gBAAgB,EAAG,KAAKf,gBAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADJ;AAUH;;AAzHkC;;AA4HvC,eAAexB,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport MakeBoard from './MakeBoard/MakeBoard';\nimport BoardDetail from './BoardDetail/BoardDetail';\n\nclass BoardContainer extends Component {\n    constructor(){\n        super();\n        this.state = {\n            classChange: false,\n            modal: false,\n            boards: [],\n            selectedImage: {},\n            id: \"\",\n        }\n        this.toggle = this.toggle.bind(this);\n    }\n    componentDidMount(){\n        this.getBoards();\n    }\n    getBoards = async () => {\n        const boards = await fetch('http://localhost:9000/boards', {\n            credentials: 'include'\n        })\n        const boardsJSON = await boards.json();\n        this.setState({\n            boards: boardsJSON.data,\n        })\n    };\n    createBoard = async (formData) => {\n        const newBoard = await fetch('http://localhost:9000/boards', {\n            credentials: 'include',\n            method: \"POST\",\n            body: JSON.stringify(formData),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        // console.log(newBoard, 'newBoard')\n        const parsedResponse = await newBoard.json();\n        if(newBoard.status === 200){\n            this.setState({\n                boards: [...this.state.boards, parsedResponse]\n            })\n        }\n    };\n    selectedImageStateChange = (newState) => {\n        this.setState({\n            selectedImage: newState.selectedImage\n        })\n    };\n    handleEditSubmit = ()=> {\n        this.toggle();\n        this.state.boards.map((board) => {\n            if(board._id === this.state.id){\n                this.updateBoard(board, board._id)\n            }\n        })\n        this.setState({\n            selectedImage: {},\n        })\n    };\n    updateBoard = async (foundBoard, id) => {\n        foundBoard.images.push(this.state.selectedImage);\n        const response = await fetch(`http://localhost:9000/boards/${id}`, {\n            method: \"PUT\",\n            mode: 'cors',\n            body: JSON.stringify(foundBoard),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        console.log(response)\n    }; \n    toggleClass = () => {\n        // console.log(this.state.classChange, 'toggle class');\n        this.setState({\n            classChange: true\n        })\n    };\n    handleImageClick = (e, image) => {\n        this.setState({\n            selectedImage: e\n        })\n        this.toggleClass();\n    };\n    toggle(){\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n\n    };\n    addNewImageButtonClick = (e) => {\n        this.state.boards.map((board) => {\n            this.setState({\n                id: e.target.id\n            })\n            this.toggle();\n        })\n    };\n    deleteBoard = () => {\n        console.log('delete successful');\n\n    };\n    handleDelete = (e) => {\n        this.state.boards.map((board) => {\n            if(board._id === this.state.id){\n                this.setState({\n                    id: e.target.id\n                })\n            }\n        })\n    };\n    render(){\n        console.log(this.state.id)\n\n        return (\n            <div>\n            <h1>BoardContainer</h1>\n            <BoardDetail boards={ this.state.boards } addNewImageButtonClick={ this.addNewImageButtonClick } handleDelete={ this.handleDelete } deleteBoard={ this.deleteBoard } />\n            <MakeBoard createBoard={ this.createBoard } selectedImageStateChange={ this.selectedImageStateChange } \n            handleImageClick={ this.handleImageClick } imageStateChange={ this.imageStateChange } \n            updateBoard={ this.updateBoard } toggle={ this.toggle } modal={ this.state.modal } classChange={ this.state.classChange } \n            handleEditSubmit={ this.handleEditSubmit } />\n            </div>\n        )\n    }\n}\n\nexport default BoardContainer;"]},"metadata":{},"sourceType":"module"}