{"ast":null,"code":"var _jsxFileName = \"/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/js/components/BoardContainer/MakeBoard/MakeBoard.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Search from './Search';\nimport { Button } from 'reactstrap';\nimport { createBoard } from '../../../actions/actions';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createBoard: board => dispatch(createBoard(board))\n  };\n};\n\nclass ConnectedMakeBoard extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.clearForm = () => {\n      document.getElementById(\"newBoard\").reset();\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.createBoard(this.state);\n      this.props.createBoardToggleStateChange();\n      this.clearForm();\n    };\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      images: [],\n      selectedImage: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-sm-6 col-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Create a New Board\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      id: \"newBoard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"*Title: \", React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"title\",\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Description: \", React.createElement(\"textarea\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"description\",\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"button\",\n      color: \"secondary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"* required\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Search, {\n      search: this.props.search,\n      results: this.props.results,\n      images: this.props.images,\n      imageStateChange: this.props.imageStateChange,\n      handleImageClick: this.props.handleImageClick,\n      updateBoard: this.props.updateBoard,\n      toggle: this.props.toggle,\n      modal: this.props.modal,\n      classChange: this.props.classChange,\n      handleImageSubmit: this.props.handleImageSubmit,\n      clearModal: this.props.clearModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst MakeBoard = connect(null, mapDispatchToProps)(ConnectedMakeBoard);\nexport default MakeBoard;","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/js/components/BoardContainer/MakeBoard/MakeBoard.jsx"],"names":["React","Component","connect","Search","Button","createBoard","mapDispatchToProps","dispatch","board","ConnectedMakeBoard","constructor","handleChange","e","setState","target","name","value","clearForm","document","getElementById","reset","handleSubmit","preventDefault","props","state","createBoardToggleStateChange","title","description","images","selectedImage","render","search","results","imageStateChange","handleImageClick","updateBoard","toggle","modal","classChange","handleImageSubmit","clearModal","MakeBoard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Search from './Search';\nimport { Button } from 'reactstrap';\nimport { createBoard } from '../../../actions/actions';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createBoard: board => dispatch(createBoard(board)),\n    }\n  };\n\nclass ConnectedMakeBoard extends Component {\n    constructor(){\n        super();\n        this.state = {\n            title: \"\",\n            description: \"\",\n            images: [],\n            selectedImage: {}\n        }\n    };\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    };\n\n    clearForm = () => { \n        document.getElementById(\"newBoard\").reset();\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createBoard(this.state);\n        this.props.createBoardToggleStateChange();\n        this.clearForm()\n \n    };\n\n    render(){\n        return (\n            <div className=\"col-sm-6 col-centered\">\n                <h2>Create a New Board</h2>\n                <form onSubmit={ this.handleSubmit } id=\"newBoard\">\n                    <div>\n                        *Title: <input onChange={ this.handleChange } type=\"text\" name=\"title\" defaultValue=\"\" />\n                    </div>\n                    <div>\n                        Description: <textarea onChange={ this.handleChange } type=\"text\" name=\"description\" defaultValue=\"\" />\n                    </div>\n                    <div>\n                        <Button className=\"button\" color=\"secondary\" type=\"submit\">Submit</Button>\n                    </div>\n                    </form>\n\n                    <div>\n                        <small>* required</small>\n                    </div>\n                    <div>\n                        <Search search={this.props.search} results={this.props.results} images={this.props.images}\n                        \n                        imageStateChange={ this.props.imageStateChange } handleImageClick={ this.props.handleImageClick } \n                        updateBoard={ this.props.updateBoard } toggle={ this.props.toggle } modal={ this.props.modal } \n                        classChange={ this.props.classChange } handleImageSubmit={ this.props.handleImageSubmit } clearModal= { this.props.clearModal } />\n                    </div>\n\n            </div>\n\n        )\n    }\n\n}\n\nconst MakeBoard = connect(null, mapDispatchToProps)(ConnectedMakeBoard);\n\nexport default MakeBoard;"]},"metadata":{},"sourceType":"module"}