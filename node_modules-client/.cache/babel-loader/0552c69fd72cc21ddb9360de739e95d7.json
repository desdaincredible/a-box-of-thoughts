{"ast":null,"code":"var _jsxFileName = \"/Users/moosesdeuces/sei-june-bug/5-24-react-app-python-backend/image-board-creator-react-python/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport BoardContainer from './BoardContainer/BoardContainer';\nimport UserContainer from './UserContainer/UserContainer';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getBoards = async () => {\n      const boards = await fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/boards\"), {\n        credentials: 'include'\n      });\n      const boardsJSON = await boards.json();\n      this.setState({\n        boards: boardsJSON.data\n      });\n    };\n\n    this.handleRegister = async formData => {\n      try {\n        console.log(formData, 'register');\n        const newUser = await fetch(\"http://localhost:9000/users\", {\n          method: \"POST\",\n          body: JSON.stringify(formData),\n          credentials: 'include',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const parsedResponse = await newUser.json();\n        console.log(parsedResponse, 'parsedResponse register');\n\n        if (parsedResponse.status === 200) {\n          this.setState({\n            loggedIn: true,\n            currentUser: parsedResponse.data\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handleLogin = async formData => {\n      try {\n        const loginUser = await fetch('http://localhost:9000/users/login', {\n          method: \"POST\",\n          body: JSON.stringify(formData),\n          credentials: 'include',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const parsedLoginResponse = await loginUser.json();\n        console.log(parsedLoginResponse, 'login');\n\n        if (parsedLoginResponse.status === 200) {\n          this.setState({\n            loggedIn: true,\n            currentUser: parsedLoginResponse.data\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.logout = async () => {\n      console.log('logout');\n\n      try {\n        const logoutUser = await fetch('http://localhost:9000/users/logout', {\n          method: \"GET\",\n          credentials: 'include'\n        });\n\n        if (logoutUser.status === 200) {\n          this.setState({\n            loggedIn: false,\n            currentUser: null\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.createBoard = async formData => {\n      const newBoard = await fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/boards\"), {\n        credentials: 'include',\n        method: \"POST\",\n        body: JSON.stringify(formData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const parsedResponse = await newBoard.json();\n\n      if (newBoard.status === 200) {\n        this.setState({\n          boards: [...this.state.boards, parsedResponse.data]\n        });\n      }\n    };\n\n    this.state = {\n      loggedIn: false,\n      currentUser: null,\n      boards: []\n    };\n  }\n\n  componentDidMount() {\n    this.getBoards();\n  }\n\n  render() {\n    console.log(this.state.currentUser, 'current user');\n    console.log(this.state.boards, 'this.state.boards app');\n    console.log(this.state, 'this.state app');\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"a box of thoughts\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.state.loggedIn ? React.createElement(BoardContainer, {\n      showBoards: this.state.currentUser.boards,\n      createBoard: this.createBoard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }) : React.createElement(UserContainer, {\n      handleRegister: this.handleRegister,\n      handleLogin: this.handleLogin,\n      handleEditProfile: this.handleEditProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/5-24-react-app-python-backend/image-board-creator-react-python/client/src/App.js"],"names":["React","Component","BoardContainer","UserContainer","App","constructor","getBoards","boards","fetch","process","env","REACT_APP_BACKEND_ADDRESS","credentials","boardsJSON","json","setState","data","handleRegister","formData","console","log","newUser","method","body","JSON","stringify","headers","parsedResponse","status","loggedIn","currentUser","err","handleLogin","loginUser","parsedLoginResponse","logout","logoutUser","createBoard","newBoard","state","componentDidMount","render","handleEditProfile"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport BoardContainer from './BoardContainer/BoardContainer';\nimport UserContainer from './UserContainer/UserContainer';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      loggedIn: false,\n      currentUser: null,\n      boards: []\n    }\n  }\n  componentDidMount(){\n    this.getBoards();\n  };\n\n  getBoards = async () => {\n    const boards = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards`, {\n        credentials: 'include'\n    })\n    const boardsJSON = await boards.json();\n    this.setState({\n        boards: boardsJSON.data,\n    })\n  };\n\n  handleRegister = async (formData) => {\n    try{\n      console.log(formData, 'register');\n      const newUser = await fetch(\"http://localhost:9000/users\", {\n        method: \"POST\",\n        body: JSON.stringify(formData),\n        credentials: 'include',\n        headers: {\n          \"Content-Type\": \"application/json\",\n        }\n      })\n      const parsedResponse = await newUser.json();\n      console.log(parsedResponse, 'parsedResponse register')\n      if(parsedResponse.status === 200){\n        this.setState({\n          loggedIn: true,\n          currentUser: parsedResponse.data\n        })\n      } \n\n    }catch(err){\n      console.log(err);\n    }\n  };\n  \n  // handleEditProfile = async (formData) => {\n  //   try{\n  //     console.log('logout');\n\n  //   }catch(err){\n  //     console.log(err); \n  //   }\n  // };\n  \n  handleLogin = async (formData) => {\n    try{\n      const loginUser = await fetch('http://localhost:9000/users/login', {\n        method: \"POST\",\n        body: JSON.stringify(formData),\n        credentials: 'include',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n      const parsedLoginResponse = await loginUser.json();\n      console.log(parsedLoginResponse, 'login')\n      if(parsedLoginResponse.status === 200){\n        this.setState({\n          loggedIn: true,\n          currentUser: parsedLoginResponse.data,\n        })\n      }\n    }catch(err){\n      console.log(err);\n    }\n  };\n  // NOT WORKING\n  \n  logout = async () => {\n    console.log('logout');\n    try{\n      const logoutUser = await fetch('http://localhost:9000/users/logout', {\n        method: \"GET\",\n        credentials: 'include'\n      });\n      if(logoutUser.status === 200){\n        this.setState({\n          loggedIn: false,\n          currentUser: null\n        })\n      }\n    }catch(err){\n      console.log(err);\n    }\n\n  };\n\n  createBoard = async (formData) => {\n    const newBoard = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards`, {\n        credentials: 'include',\n        method: \"POST\",\n        body: JSON.stringify(formData),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    })\n    const parsedResponse = await newBoard.json();\n    if(newBoard.status === 200){\n        this.setState({\n            boards: [...this.state.boards, parsedResponse.data]\n        })\n    }\n  };\n  \n  render(){\n    console.log(this.state.currentUser, 'current user')\n    console.log(this.state.boards, 'this.state.boards app')\n    console.log(this.state, 'this.state app')\n    return (\n      <div className=\"App\">\n      <div className=\"header\">\n        <h4>a box of thoughts</h4>\n      </div>\n        <div>\n          {\n            this.state.loggedIn ?\n            <BoardContainer showBoards={ this.state.currentUser.boards } createBoard={ this.createBoard } />\n            :\n            <UserContainer handleRegister={ this.handleRegister } handleLogin={ this.handleLogin } handleEditProfile={ this.handleEditProfile } />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}