{"ast":null,"code":"var _jsxFileName = \"/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/js/components/BoardContainer/BoardDetail/EditBoard/EditBoard.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass EditBoard extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: {\n          // ...this.state,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.findBoard = async foundBoard => {\n      const board = await fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/boards/\").concat(foundBoard), {\n        credentials: 'include'\n      });\n      const boardJSON = await board.json();\n      this.setState({\n        oldTitle: boardJSON.data.title,\n        oldDescription: boardJSON.data.description,\n        editBoardId: foundBoard\n      });\n    };\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      oldTitle: \"\",\n      oldDescription: \"\",\n      editBoardId: \"\"\n    };\n  }\n\n  render() {\n    if (this.props.editModal) {\n      this.findBoard(this.props.editBoardId);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.props.editModal,\n      toggle: this.props.toggleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.props.toggleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Edit Board Details\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"*Title: \", React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Description: \", React.createElement(\"textarea\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"* required\"))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      onClick: () => this.props.handleEditSubmit(this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Submit\"), ' ', React.createElement(Button, {\n      outline: true,\n      color: \"secondary\",\n      onClick: this.props.toggleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default connect()(EditBoard);","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/js/components/BoardContainer/BoardDetail/EditBoard/EditBoard.jsx"],"names":["React","Component","connect","Button","Modal","ModalHeader","ModalBody","ModalFooter","EditBoard","constructor","handleChange","e","setState","target","name","value","findBoard","foundBoard","board","fetch","process","env","REACT_APP_BACKEND_ADDRESS","credentials","boardJSON","json","oldTitle","data","title","oldDescription","description","editBoardId","state","render","props","editModal","toggleEdit","handleEditSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass EditBoard extends Component {\n    constructor(){\n        super();\n        this.state = {\n            title: \"\",\n            description: \"\",\n            oldTitle: \"\",\n            oldDescription: \"\",\n            editBoardId: \"\",\n        }\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name] : {\n                // ...this.state,\n                [e.target.name] : e.target.value\n            }\n        })\n    };\n\n    findBoard = async (foundBoard) => {\n        const board = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards/${foundBoard}`, {\n            credentials: 'include'\n        })\n        const boardJSON = await board.json();\n        this.setState({\n            oldTitle: boardJSON.data.title,\n            oldDescription: boardJSON.data.description,\n            editBoardId: foundBoard\n        })\n    };\n\n    render(){\n        if(this.props.editModal){\n            this.findBoard(this.props.editBoardId)\n        }\n\n        return (\n            <div>\n                <Modal isOpen={ this.props.editModal } toggle={ this.props.toggleEdit }>\n                <ModalHeader toggle={ this.props.toggleEdit }>Edit Board Details</ModalHeader>\n                <ModalBody>\n                    <div>\n                        *Title: <input onChange={ this.handleChange } type=\"text\" name=\"title\" />\n                    </div>\n                    <div>\n                        Description: <textarea onChange={ this.handleChange } type=\"text\" name=\"description\"  />\n                    </div>\n                    <div>\n                        <small>* required</small>\n                    </div>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"secondary\" onClick={ () => this.props.handleEditSubmit(this.state) }>Submit</Button>{' '}\n                    <Button outline color=\"secondary\" onClick={ this.props.toggleEdit }>Cancel</Button>\n                </ModalFooter>\n                </Modal>\n            </div>\n        )\n    };\n}\n\nexport default connect()(EditBoard);"]},"metadata":{},"sourceType":"module"}