{"ast":null,"code":"var _jsxFileName = \"/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/js/components/BoardContainer/BoardDetail/EditBoard/EditBoard.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { findEditBoard } from '../../../../actions/actions';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    findEditBoard: board => dispatch(findEditBoard(board))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    editBoard: state.editBoard\n  };\n};\n\nclass ConnectedEditBoard extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      console.log(e.target.value);\n      console.log(e.target.name, 'name');\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      findBoardToggle: \"\",\n      editBoard: {}\n    };\n  }\n\n  render() {\n    // console.log(this.props, 'edit props')\n    // console.log(this.state, 'edit state')\n    if (this.props.editModal) {\n      this.props.findEditBoard(this.props.editBoardId);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.props.editModal,\n      toggle: this.props.toggleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.props.toggleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Edit Board\")), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.props.editBoard ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"*Title: \", React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"title\",\n      defaultValue: this.props.editBoard.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Description: \", React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"description\",\n      defaultValue: this.props.editBoard.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"* required\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"*Title: \", React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"title\",\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Description: \", React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"description\",\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"* required\")))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      onClick: () => this.props.handleEditSubmit(this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Submit\"), ' ', React.createElement(Button, {\n      outline: true,\n      color: \"secondary\",\n      onClick: this.props.toggleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nconst EditBoard = connect(mapStateToProps, mapDispatchToProps)(ConnectedEditBoard);\nexport default EditBoard;","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/js/components/BoardContainer/BoardDetail/EditBoard/EditBoard.jsx"],"names":["React","Component","connect","Button","Modal","ModalHeader","ModalBody","ModalFooter","findEditBoard","mapDispatchToProps","dispatch","board","mapStateToProps","state","editBoard","ConnectedEditBoard","constructor","handleChange","e","console","log","target","value","name","setState","title","description","findBoardToggle","render","props","editModal","editBoardId","toggleEdit","handleEditSubmit","EditBoard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { findEditBoard } from '../../../../actions/actions';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        findEditBoard: board => dispatch(findEditBoard(board)),\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        editBoard: state.editBoard,\n    }\n}\n\nclass ConnectedEditBoard extends Component {\n    constructor(){\n        super();\n        this.state = {\n            title: \"\",\n            description: \"\",\n            findBoardToggle: \"\",\n            editBoard: {},\n        }\n    };\n\n    // componentWillReceiveProps = (nextProps) => {\n    //     console.log('hit')\n    //     this.setState({\n    //         title: nextProps.title,\n    //         description: nextProps.description,\n    //         editBoardId: nextProps.editBoardId,\n    //     })\n    // }\n\n    handleChange = (e) => {\n        console.log(e.target.value)\n        console.log(e.target.name, 'name')\n        this.setState({\n            [e.target.name] : e.target.value,\n        })\n    };\n\n    render(){\n        // console.log(this.props, 'edit props')\n        // console.log(this.state, 'edit state')\n\n\n        if(this.props.editModal){\n            this.props.findEditBoard(this.props.editBoardId)\n        }\n\n        return (\n            <div>\n                <Modal isOpen={ this.props.editModal } toggle={ this.props.toggleEdit }>\n                <ModalHeader toggle={ this.props.toggleEdit }><h5>Edit Board</h5></ModalHeader>\n                <ModalBody>\n                    {\n                        this.props.editBoard ?\n                        <div>\n                            <div>\n                                *Title: <input onChange={this.handleChange} type=\"text\" name=\"title\" defaultValue={this.props.editBoard.title} />\n                            </div>\n                            <div>\n                                Description: <input onChange={this.handleChange} name=\"description\" defaultValue={this.props.editBoard.description} />\n                            </div>\n                            <div>\n                                <small>* required</small>\n                            </div>\n                        </div>\n                    :\n                        <div>    \n                            <div>\n                                *Title: <input onChange={ this.handleChange } type=\"text\" name=\"title\" defaultValue=\"\" />\n                            </div>\n                            <div>\n                                Description: <input onChange={ this.handleChange } name=\"description\" defaultValue=\"\" />\n                            </div>\n                            <div>\n                                <small>* required</small>\n                            </div>\n                        </div>\n                    }\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"secondary\" onClick={ () => this.props.handleEditSubmit(this.state) }>Submit</Button>{' '}\n                    <Button outline color=\"secondary\" onClick={ this.props.toggleEdit }>Cancel</Button>\n                </ModalFooter>\n                </Modal>\n            </div>\n        )\n    };\n}\n\nconst EditBoard = connect(mapStateToProps, mapDispatchToProps)(ConnectedEditBoard);\nexport default EditBoard;\n\n"]},"metadata":{},"sourceType":"module"}