{"ast":null,"code":"var _jsxFileName = \"/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/js/components/BoardContainer/BoardContainer.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MakeBoard from './MakeBoard/MakeBoard';\nimport BoardDetail from './BoardDetail/BoardDetail';\nimport { getUser, deleteBoard, editBoard, findEditBoard } from '../../actions/actions';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUser: user => dispatch(getUser(user)),\n    deleteBoard: board => dispatch(deleteBoard(board)),\n    editBoard: board => dispatch(editBoard(board)),\n    findEditBoard: board => dispatch(findEditBoard(board))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    renderBoardDetail: state.renderBoardDetail,\n    boards: state.boards,\n    selectedImage: state.selectedImage\n  };\n};\n\nclass ConnectedBoardContainer extends Component {\n  constructor() {\n    super();\n\n    this.handleImageSubmit = () => {\n      this.toggle();\n      this.props.boards.map(board => {\n        if (board._id === this.state.id) {\n          this.updateBoard(board, board._id);\n        }\n      });\n    };\n\n    this.updateBoard = async (foundBoard, id) => {\n      foundBoard.images.push(this.state.selectedImage);\n      await fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/boards/\").concat(id), {\n        method: \"PUT\",\n        body: JSON.stringify(foundBoard),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      this.props.getUser();\n    };\n\n    this.handleImageClick = (e, image) => {\n      this.setState({\n        selectedImage: e\n      });\n    };\n\n    this.addNewImageButtonClick = e => {\n      this.setState({\n        id: e.target.id\n      });\n      this.toggle();\n    };\n\n    this.deleteBoardButtonClick = (e, id) => {\n      this.props.boards.map(board => {\n        if (board._id === e.target.id) {\n          this.props.deleteBoard(board._id);\n        }\n      });\n    };\n\n    this.deleteImageButtonClick = async (board, image, i) => {\n      if (board.images[i] === image) {\n        board.images.splice(image, 1);\n      }\n\n      ;\n      this.updateBoardAfterDelete(board);\n    };\n\n    this.editBoardButtonClick = e => {\n      this.toggleEdit();\n      this.setState({\n        editBoardId: e.target.id\n      });\n      this.findBoard(this.state.editBoardId);\n      console.log('hit');\n    };\n\n    this.handleEditSubmit = response => {\n      console.log(response, 'response');\n      console.log(this.state.editBoardId, 'editboardid');\n      this.props.editBoard(response, this.state.editBoardId);\n      this.toggleEdit();\n    };\n\n    this.state = {\n      classChange: false,\n      modal: false,\n      editModal: false,\n      id: \"\",\n      editBoardId: \"\",\n      editBoard: {},\n      search: \"\",\n      results: [],\n      images: [],\n      title: \"\",\n      description: \"\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.toggleEdit = this.toggleEdit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getUser();\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  toggleEdit() {\n    this.setState(prevState => ({\n      editModal: !prevState.editModal\n    }));\n  }\n\n  render() {\n    findBoard = async foundBoard => {\n      console.log(foundBoard, 'foundboard');\n      const board = await fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/boards/\").concat(foundBoard), {\n        credentials: 'include'\n      });\n      const boardJSON = await board.json();\n      console.log(boardJSON, 'json');\n      this.setState({\n        editBoard: boardJSON\n      });\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(MakeBoard, {\n      updateBoard: this.updateBoard,\n      toggle: this.toggle,\n      modal: this.state.modal,\n      search: this.state.search,\n      results: this.state.results,\n      images: this.state.images,\n      title: this.state.title,\n      description: this.state.description,\n      selectedImageStateChange: this.selectedImageStateChange,\n      handleImageClick: this.handleImageClick,\n      imageStateChange: this.imageStateChange,\n      classChange: this.state.classChange,\n      handleImageSubmit: this.handleImageSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), this.props.renderBoardDetail ? React.createElement(BoardDetail, {\n      toggleEdit: this.toggleEdit,\n      editModal: this.state.editModal,\n      editBoardId: this.state.editBoardId,\n      editBoardButtonClick: this.editBoardButtonClick,\n      handleEditSubmit: this.handleEditSubmit,\n      editBoard: this.state.editBoard,\n      addNewImageButtonClick: this.addNewImageButtonClick,\n      deleteBoardButtonClick: this.deleteBoardButtonClick,\n      deleteImageButtonClick: this.deleteImageButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nconst BoardContainer = connect(mapStateToProps, mapDispatchToProps)(ConnectedBoardContainer);\nexport default BoardContainer;","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/js/components/BoardContainer/BoardContainer.jsx"],"names":["React","Component","connect","MakeBoard","BoardDetail","getUser","deleteBoard","editBoard","findEditBoard","mapDispatchToProps","dispatch","user","board","mapStateToProps","state","renderBoardDetail","boards","selectedImage","ConnectedBoardContainer","constructor","handleImageSubmit","toggle","props","map","_id","id","updateBoard","foundBoard","images","push","fetch","process","env","REACT_APP_BACKEND_ADDRESS","method","body","JSON","stringify","headers","handleImageClick","e","image","setState","addNewImageButtonClick","target","deleteBoardButtonClick","deleteImageButtonClick","i","splice","updateBoardAfterDelete","editBoardButtonClick","toggleEdit","editBoardId","findBoard","console","log","handleEditSubmit","response","classChange","modal","editModal","search","results","title","description","bind","componentDidMount","prevState","render","credentials","boardJSON","json","selectedImageStateChange","imageStateChange","BoardContainer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MakeBoard from './MakeBoard/MakeBoard';\nimport BoardDetail from './BoardDetail/BoardDetail';\nimport { getUser, deleteBoard, editBoard, findEditBoard } from '../../actions/actions';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getUser: user => dispatch(getUser(user)),\n        deleteBoard: board => dispatch(deleteBoard(board)),\n        editBoard: board => dispatch(editBoard(board)),\n        findEditBoard: board => dispatch(findEditBoard(board)),\n    }\n  };\n\nconst mapStateToProps = state => {\n    return { \n        renderBoardDetail: state.renderBoardDetail, \n        boards: state.boards,\n        selectedImage: state.selectedImage,\n    }\n};\n\nclass ConnectedBoardContainer extends Component {\n    constructor(){\n        super();\n        this.state = {\n            classChange: false,\n            modal: false,\n            editModal: false,\n            id: \"\",\n            editBoardId: \"\",\n            editBoard: {},\n            search: \"\",\n            results: [],\n            images: [],\n            title: \"\",\n            description: \"\",\n        }\n        this.toggle = this.toggle.bind(this);\n        this.toggleEdit = this.toggleEdit.bind(this);\n    }\n\n    componentDidMount(){\n        this.props.getUser();\n    };\n\n    handleImageSubmit = ()=> {\n        this.toggle();\n        this.props.boards.map((board) => {\n            if(board._id === this.state.id){\n                this.updateBoard(board, board._id)\n            }\n        })\n    }; \n\n    updateBoard = async (foundBoard, id) => {\n        foundBoard.images.push(this.state.selectedImage);\n        await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards/${id}`, {\n            method: \"PUT\",\n            body: JSON.stringify(foundBoard),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        this.props.getUser();\n    };\n\n    handleImageClick = (e, image) => {\n        this.setState({\n            selectedImage: e\n        })\n    };\n\n    toggle(){\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    };\n\n    toggleEdit(){\n        this.setState(prevState => ({\n            editModal: !prevState.editModal\n        }));\n    };\n\n    addNewImageButtonClick = (e) => {\n            this.setState({\n                id: e.target.id\n        })\n        this.toggle();\n    };\n\n    deleteBoardButtonClick = (e, id) => {\n        this.props.boards.map((board) => {\n            if (board._id === e.target.id){\n                this.props.deleteBoard(board._id)\n            }\n        })\n    };\n\n    deleteImageButtonClick = async (board, image, i) => {\n        if(board.images[i] === image){\n            board.images.splice(image, 1)\n        };        \n        this.updateBoardAfterDelete(board);\n    }; \n\n    editBoardButtonClick = (e) => {\n        this.toggleEdit();\n        this.setState({\n            editBoardId: e.target.id\n        })\n        this.findBoard(this.state.editBoardId)\n        console.log('hit')\n    };\n\n    handleEditSubmit = (response) => {\n        console.log(response, 'response')\n        console.log(this.state.editBoardId, 'editboardid')\n\n        this.props.editBoard(response, this.state.editBoardId)\n        this.toggleEdit();\n    };\n\n\n    render(){\n        findBoard = async (foundBoard) => {\n            console.log(foundBoard, 'foundboard')\n            const board = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards/${foundBoard}`, {\n                credentials: 'include'\n            })\n            const boardJSON = await board.json();\n            console.log(boardJSON, 'json')\n            this.setState({\n                editBoard: boardJSON\n            }) \n        };\n        \n        return (\n            <div>   \n                <MakeBoard updateBoard={ this.updateBoard } toggle={ this.toggle } modal={ this.state.modal }\n                search={this.state.search} results={this.state.results} images={this.state.images} title={this.state.title}\n                description={this.state.description}\n\n                selectedImageStateChange={ this.selectedImageStateChange } \n                handleImageClick={ this.handleImageClick } imageStateChange={ this.imageStateChange } \n                  classChange={ this.state.classChange } \n                handleImageSubmit={ this.handleImageSubmit } />\n                <hr />\n                {\n                    this.props.renderBoardDetail ?\n                        <BoardDetail toggleEdit={ this.toggleEdit } editModal={ this.state.editModal } editBoardId={ this.state.editBoardId }\n                        editBoardButtonClick={ this.editBoardButtonClick } handleEditSubmit={ this.handleEditSubmit } editBoard={this.state.editBoard}\n\n                        addNewImageButtonClick={ this.addNewImageButtonClick } \n                        deleteBoardButtonClick={ this.deleteBoardButtonClick } deleteImageButtonClick= { this.deleteImageButtonClick }\n                        />\n                    :\n                    null\n                }      \n                 \n            </div>\n        )\n    }\n}\n\nconst BoardContainer = connect(mapStateToProps, mapDispatchToProps)(ConnectedBoardContainer);\n\nexport default BoardContainer;"]},"metadata":{},"sourceType":"module"}