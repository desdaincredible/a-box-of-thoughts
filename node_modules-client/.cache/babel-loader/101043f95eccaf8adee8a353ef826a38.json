{"ast":null,"code":"import { REGISTER, USER_CONSTANTS } from '../constants/action-types';\nexport function handleRegister(formData) {\n  return function (dispatch) {\n    return fetch(\"http://localhost:9000/users\", {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: REGISTER,\n        payload: json\n      });\n    });\n  };\n}\n;\nimport { userService } from '../_services';\nimport { history } from '../_helpers';\nexport const userActions = {\n  login,\n  logout,\n  register,\n  getAll,\n  delete: _delete\n};\n\nfunction login(username, password) {\n  return dispatch => {\n    dispatch(request({\n      username\n    }));\n    userService.login(username, password).then(user => {\n      dispatch(success(user));\n      history.push('/');\n    }, error => {\n      dispatch(failure(error.toString()));\n      console.log(err);\n    });\n  };\n\n  function request(user) {\n    return {\n      type: USER_CONSTANTS.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: USER_CONSTANTS.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: USER_CONSTANTS.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction logout() {\n  userService.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction register(user) {\n  return dispatch => {\n    dispatch(request(user));\n    userService.register(user).then(user => {\n      dispatch(success());\n      history.push('/login');\n      console.log(\"Registration of \".concat(user.username, \" successful\"));\n    }, error => {\n      dispatch(failure(error.toString()));\n      console.log(error);\n    });\n  };\n\n  function request(user) {\n    return {\n      type: USER_CONSTANTS.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: USER_CONSTANTS.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: USER_CONSTANTS.REGISTER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction deleteUser(id) {\n  return dispatch => {\n    dispatch(request(id));\n    userService.deleteUser(id).then(user => dispatch(success(id)), error => console.log(error));\n  };\n\n  function request(id) {\n    return {\n      type: USER_CONSTANTS.DELETE_REQUEST,\n      id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: USER_CONSTANTS.DELETE_SUCCESS,\n      id\n    };\n  }\n}","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/js/actions/actions.js"],"names":["REGISTER","USER_CONSTANTS","handleRegister","formData","dispatch","fetch","method","body","JSON","stringify","credentials","headers","then","response","json","type","payload","userService","history","userActions","login","logout","register","getAll","delete","_delete","username","password","request","user","success","push","error","failure","toString","console","log","err","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","userConstants","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","deleteUser","id","DELETE_REQUEST","DELETE_SUCCESS"],"mappings":"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","sourcesContent":["import { REGISTER, USER_CONSTANTS } from '../constants/action-types';\n\n\nexport function handleRegister(formData){\n    return function(dispatch){\n        return fetch(\"http://localhost:9000/users\", {\n            method: \"POST\",\n            body: JSON.stringify(formData),\n            credentials: 'include',\n            headers: {\n              \"Content-Type\": \"application/json\",\n            }\n          })\n            .then(response => response.json())\n            .then(json => { dispatch({ type: REGISTER, payload: json});\n        })\n    }\n};\n\nimport { userService } from '../_services';\nimport { history } from '../_helpers';\n\nexport const userActions = {\n    login,\n    logout,\n    register,\n    getAll,\n    delete: _delete\n};\n\nfunction login(username, password) {\n    return dispatch => {\n        dispatch(request({ username }));\n\n        userService.login(username, password)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    history.push('/');\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    console.log(err);\n                }\n            );\n    };\n\n    function request(user) { return { type: USER_CONSTANTS.LOGIN_REQUEST, user } }\n    function success(user) { return { type: USER_CONSTANTS.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: USER_CONSTANTS.LOGIN_FAILURE, error } }\n}\n\nfunction logout() {\n    userService.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        userService.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    history.push('/login');\n                    console.log(`Registration of ${user.username} successful`);\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    console.log(error)\n                }\n            );\n    };\n\n    function request(user) { return { type: USER_CONSTANTS.REGISTER_REQUEST, user } }\n    function success(user) { return { type: USER_CONSTANTS.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: USER_CONSTANTS.REGISTER_FAILURE, error } }\n}\n\nfunction deleteUser(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        userService.deleteUser(id)\n            .then(\n                user => dispatch(success(id)),\n                error => console.log(error)\n            );\n    };\n\n    function request(id) { return { type: USER_CONSTANTS.DELETE_REQUEST, id } }\n    function success(id) { return { type: USER_CONSTANTS.DELETE_SUCCESS, id } }\n}"]},"metadata":{},"sourceType":"module"}