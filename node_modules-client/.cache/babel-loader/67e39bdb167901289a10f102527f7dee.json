{"ast":null,"code":"import { REGISTER, LOGIN, LOGOUT, GET_USER, CREATE_BOARD, SELECTED_IMAGE, UPDATE_BOARD, DELETE_BOARD, FIND_BOARD } from '../constants/action-types';\nexport function handleRegister(formData) {\n  return function (dispatch) {\n    return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/users\"), {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: REGISTER,\n        payload: json\n      });\n    });\n  };\n}\n;\nexport function handleLogin(formData) {\n  return function (dispatch) {\n    return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/users/login\"), {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(res => {\n      if (res.status === 200) {\n        dispatch({\n          type: LOGIN,\n          payload: res\n        });\n      }\n    });\n  };\n}\n;\nexport function logout() {\n  return function (dispatch) {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n}\n;\nexport function getUser() {\n  return function (dispatch) {\n    return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/boards\"), {\n      credentials: 'include'\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: GET_USER,\n        payload: json\n      });\n    });\n  };\n}\n;\nexport function createBoard(formData) {\n  return function (dispatch) {\n    return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/boards\"), {\n      credentials: 'include',\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: CREATE_BOARD,\n        payload: json\n      });\n    });\n  };\n}\n;\nexport function selectedImageStateChange(newState) {\n  return {\n    type: SELECTED_IMAGE,\n    payload: newState\n  };\n}\n;\nexport function deleteBoard(foundBoard) {\n  return function (dispatch) {\n    return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/boards/\").concat(foundBoard), {\n      method: \"DELETE\"\n    }).then(dispatch({\n      type: DELETE_BOARD,\n      payload: foundBoard\n    }));\n  };\n}\n;\nexport function findEditBoard(board) {\n  return function (dispatch) {\n    return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/boards/\").concat(board), {\n      credentials: 'include'\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: FIND_BOARD,\n        payload: json\n      });\n    });\n  };\n}\nexport function editBoard(response) {\n  return function (dispatch) {\n    return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/boards/\").concat(response), {\n      method: \"PUT\",\n      body: JSON.stringify(response),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(dispatch({\n      type: UPDATE_BOARD,\n      payload: response\n    }));\n  };\n}\n;","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/actions/actions.js"],"names":["REGISTER","LOGIN","LOGOUT","GET_USER","CREATE_BOARD","SELECTED_IMAGE","UPDATE_BOARD","DELETE_BOARD","FIND_BOARD","handleRegister","formData","dispatch","fetch","process","env","REACT_APP_BACKEND_ADDRESS","method","body","JSON","stringify","credentials","headers","then","response","json","type","payload","handleLogin","res","status","logout","getUser","createBoard","selectedImageStateChange","newState","deleteBoard","foundBoard","findEditBoard","board","editBoard"],"mappings":"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","sourcesContent":["import { REGISTER, LOGIN, LOGOUT, GET_USER, CREATE_BOARD, SELECTED_IMAGE, UPDATE_BOARD, \n  DELETE_BOARD, FIND_BOARD } from '../constants/action-types';\n\nexport function handleRegister(formData){\n    return function(dispatch){\n        return fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/users`, {\n            method: \"POST\",\n            body: JSON.stringify(formData),\n            credentials: 'include',\n            headers: {\n              \"Content-Type\": \"application/json\",\n            }\n          })\n            .then(response => response.json())\n            .then(json => { dispatch({ type: REGISTER, payload: json });\n        })\n    }\n};\n\nexport function handleLogin(formData){\n  return function(dispatch){\n    return fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/users/login`, {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n      })\n        .then(response => response.json())\n        .then(res => {if(res.status === 200){ dispatch({ type: LOGIN, payload: res })}} )\n  }\n};\n\nexport function logout(){\n  return function(dispatch){\n    dispatch({ type: LOGOUT })\n  }\n};\n\nexport function getUser(){\n  return function(dispatch){\n    return fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards`, {\n      credentials: 'include'\n    })\n      .then(response => response.json())\n      .then(json => { dispatch({ type: GET_USER, payload: json })})\n  }\n};\n\nexport function createBoard(formData){\n  return function(dispatch){\n    return fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards`, {\n      credentials: 'include',\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: {\n          \"Content-Type\": \"application/json\"\n      }\n  })\n    .then(response => response.json())\n    .then(json => { dispatch({ type: CREATE_BOARD, payload: json })})\n  }\n};\n\nexport function selectedImageStateChange(newState){\n  return ({ type: SELECTED_IMAGE, payload: newState })\n};\n\nexport function deleteBoard(foundBoard){\n  return function(dispatch){\n    return fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards/${foundBoard}`, {\n      method: \"DELETE\",\n  })\n  .then( dispatch({ type: DELETE_BOARD, payload: foundBoard }))\n\n  }\n};\n\nexport function findEditBoard(board){\n  return function(dispatch){\n    return fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards/${board}`, {\n      credentials: 'include'\n    })\n      .then(response => response.json())\n      .then(json => { dispatch({ type: FIND_BOARD, payload: json })})\n  }\n}\n\nexport function editBoard(response){\n  return function(dispatch){\n    return fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards/${response}`, {\n      method: \"PUT\",\n      body: JSON.stringify(response),\n      headers: {\n          \"Content-Type\": \"application/json\"\n      }\n  })\n  .then( dispatch({ type: UPDATE_BOARD, payload: response })\n  )\n  }\n};"]},"metadata":{},"sourceType":"module"}