{"ast":null,"code":"var _jsxFileName = \"/Users/moosesdeuces/sei-june-bug/5-10-image-board-creator/image-board-creator/front-end/src/BoardContainer/BoardContainer.jsx\";\nimport React, { Component } from 'react';\nimport MakeBoard from './MakeBoard/MakeBoard';\nimport Search from './MakeBoard/Search';\n\nclass BoardContainer extends Component {\n  constructor() {\n    super();\n\n    this.getBoards = async () => {\n      const boards = await fetch('http://localhost:9000/boards', {\n        credentials: 'include'\n      });\n      const boardsJSON = await boards.json();\n      this.setState({\n        boards: [boardsJSON]\n      });\n    };\n\n    this.createBoard = async formData => {\n      const newBoard = await fetch('http://localhost:9000/boards', {\n        credentials: 'include',\n        method: \"POST\",\n        body: JSON.stringify(formData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const parsedResponse = await newBoard.json();\n\n      if (newBoard.status === 200) {\n        this.setState({\n          boards: [...this.state.boards, parsedResponse]\n        });\n      }\n    };\n\n    this.createImage = async query => {\n      const newImage = await fetch(\"https://api.unsplash.com/search/photos/?page=1&per_page=10&query=\".concat(query, \"&client_id=1fe232c10d045efb942c686798a897086057edb740c100d8ee47adf69d77c998\"), {\n        credentials: 'include',\n        method: \"POST\",\n        body: JSON.stringify(query),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const parsedResponse = await newImage.json();\n\n      if (newImage.status === 200) {\n        this.setState({\n          images: [...this.state.boards.image, parsedResponse]\n        });\n      }\n\n      console.log(this.state.boards, 'this.state.boards');\n      console.log(this.state.boards.images, 'this.state.boards.images');\n    };\n\n    this.state = {\n      boards: [],\n      images: []\n    };\n  }\n\n  componentDidMount() {\n    this.getBoards();\n  }\n\n  render() {\n    console.log(this.state.boards, 'this.state.boards');\n    const boardsList = this.state.boards.map((board, i) => {\n      // console.log(this.state.boards[i].data[i].images, 'this.state.boards.data')\n      return React.createElement(\"div\", {\n        key: board.data[i]._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, board.data[i].title), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, board.data[i].description), React.createElement(\"img\", {\n        alt: i,\n        src: this.state.boards[i].data[i].images[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }); // figure out how to get images to show up\n    // const imageList = this.state.boards.data.map((image) => {\n    //         return (\n    //             <img src={ image.data.images } />\n    //         )\n    // })\n\n    console.log(boardsList, 'boardsList');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"BoardContainer\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, boardsList), React.createElement(MakeBoard, {\n      createBoard: this.createBoard,\n      createImage: this.createImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Search, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BoardContainer;","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/5-10-image-board-creator/image-board-creator/front-end/src/BoardContainer/BoardContainer.jsx"],"names":["React","Component","MakeBoard","Search","BoardContainer","constructor","getBoards","boards","fetch","credentials","boardsJSON","json","setState","createBoard","formData","newBoard","method","body","JSON","stringify","headers","parsedResponse","status","state","createImage","query","newImage","images","image","console","log","componentDidMount","render","boardsList","map","board","i","data","_id","title","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MakeBoard from './MakeBoard/MakeBoard';\nimport Search from './MakeBoard/Search';\n\nclass BoardContainer extends Component {\n    constructor(){\n        super();\n        this.state = {\n            boards: [],\n            images: []\n        }\n    }\n    componentDidMount(){\n        this.getBoards();\n    }\n    getBoards = async () => {\n        const boards = await fetch('http://localhost:9000/boards', {\n            credentials: 'include'\n        })\n        const boardsJSON = await boards.json();\n        this.setState({\n            boards: [boardsJSON]\n        })\n    };\n    createBoard = async (formData) => {\n        const newBoard = await fetch('http://localhost:9000/boards', {\n            credentials: 'include',\n            method: \"POST\",\n            body: JSON.stringify(formData),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        const parsedResponse = await newBoard.json();\n        if(newBoard.status === 200){\n            this.setState({\n                boards: [...this.state.boards, parsedResponse]\n            })\n        }\n    };\n    createImage = async (query) => {\n        const newImage = await fetch(`https://api.unsplash.com/search/photos/?page=1&per_page=10&query=${query}&client_id=1fe232c10d045efb942c686798a897086057edb740c100d8ee47adf69d77c998`, {\n            credentials: 'include',\n            method: \"POST\",\n            body: JSON.stringify(query),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        const parsedResponse = await newImage.json();\n        if(newImage.status === 200){\n            this.setState({\n                images: [...this.state.boards.image, parsedResponse]\n            })\n        }\n        console.log(this.state.boards, 'this.state.boards')\n        console.log(this.state.boards.images, 'this.state.boards.images')\n\n    };\n\n    render(){\n        console.log(this.state.boards, 'this.state.boards')\n        const boardsList = this.state.boards.map((board, i) => {\n            // console.log(this.state.boards[i].data[i].images, 'this.state.boards.data')\n\n                return (\n                    <div key={ board.data[i]._id }>\n                        <li>{ board.data[i].title }</li>\n                        <li>{ board.data[i].description }</li>\n                        <img alt={i} src={ this.state.boards[i].data[i].images[i] } />\n                    </div>\n                )   \n        })\n// figure out how to get images to show up\n\n        // const imageList = this.state.boards.data.map((image) => {\n        //         return (\n        //             <img src={ image.data.images } />\n        //         )\n        // })\n        console.log(boardsList, 'boardsList')\n\n        return (\n            <div>\n            <h1>BoardContainer</h1>\n            <ul>\n                { boardsList }\n            </ul>\n            {/* { imageList} */}\n            <MakeBoard createBoard={ this.createBoard } createImage={ this.createImage } />\n            <Search />\n            </div>\n        )\n    }\n\n}\n\nexport default BoardContainer;"]},"metadata":{},"sourceType":"module"}