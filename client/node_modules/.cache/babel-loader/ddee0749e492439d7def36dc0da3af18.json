{"ast":null,"code":"import { REGISTER, LOGIN, LOGOUT, GET_USER, CREATE_BOARD, SELECTED_IMAGE, UPDATE_BOARD, DELETE_BOARD, EDIT_BOARD } from \"../constants/action-types\";\nconst initialState = {\n  loggedIn: false,\n  currentUser: null,\n  boards: [],\n  renderBoardDetail: false,\n  selectedImage: {}\n};\nexport const rootReducer = (state = initialState, action) => {\n  if (action.type === REGISTER) {\n    return {\n      loggedIn: true,\n      currentUser: action.payload.data\n    };\n  }\n\n  if (action.type === LOGIN) {\n    return {\n      loggedIn: true,\n      currentUser: action.payload.data\n    };\n  }\n\n  if (action.type === LOGOUT) {\n    return {\n      loggedIn: false,\n      currentUser: null\n    };\n  }\n\n  if (action.type === GET_USER) {\n    return Object.assign({}, state, {\n      boards: action.payload.data.boards,\n      renderBoardDetail: true\n    });\n  }\n\n  if (action.type === CREATE_BOARD) {\n    return Object.assign({}, state, {\n      boards: state.boards.concat(action.payload.data)\n    });\n  }\n\n  if (action.type === SELECTED_IMAGE) {\n    return Object.assign({}, state, {\n      selectedImage: action.payload.data\n    });\n  } // if (action.type === UPDATE_BOARD){\n  //   return Object.assign({}, state, { boards: state.boards.concat(action.payload.data) });\n  // }\n\n\n  if (action.type === DELETE_BOARD) {\n    return Object.assign({}, state, {\n      boards: state.boards.filter(board => board._id !== action.payload)\n    });\n  }\n\n  if (action.type === EDIT_BOARD) {\n    console.log(action.payload);\n    return Object.assign({}, state, {\n      boards: state.boards.concat(action.payload.data)\n    });\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/js/reducers/reducers.js"],"names":["REGISTER","LOGIN","LOGOUT","GET_USER","CREATE_BOARD","SELECTED_IMAGE","UPDATE_BOARD","DELETE_BOARD","EDIT_BOARD","initialState","loggedIn","currentUser","boards","renderBoardDetail","selectedImage","rootReducer","state","action","type","payload","data","Object","assign","concat","filter","board","_id","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,YAA5C,EAA0DC,cAA1D,EAA0EC,YAA1E,EAAwFC,YAAxF,EAAsGC,UAAtG,QAAwH,2BAAxH;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,KADS;AAEnBC,EAAAA,WAAW,EAAE,IAFM;AAGnBC,EAAAA,MAAM,EAAE,EAHW;AAInBC,EAAAA,iBAAiB,EAAE,KAJA;AAKnBC,EAAAA,aAAa,EAAE;AALI,CAArB;AASA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAC3D,MAAIA,MAAM,CAACC,IAAP,KAAgBlB,QAApB,EAA8B;AAC5B,WAAO;AACLU,MAAAA,QAAQ,EAAE,IADL;AAELC,MAAAA,WAAW,EAAEM,MAAM,CAACE,OAAP,CAAeC;AAFvB,KAAP;AAID;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgBjB,KAApB,EAA2B;AACzB,WAAO;AACLS,MAAAA,QAAQ,EAAE,IADL;AAELC,MAAAA,WAAW,EAAEM,MAAM,CAACE,OAAP,CAAeC;AAFvB,KAAP;AAID;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgBhB,MAApB,EAA4B;AAC1B,WAAO;AACLQ,MAAAA,QAAQ,EAAE,KADL;AAELC,MAAAA,WAAW,EAAE;AAFR,KAAP;AAID;;AACD,MAAIM,MAAM,CAACC,IAAP,KAAgBf,QAApB,EAA8B;AAC5B,WAAOkB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAAEJ,MAAAA,MAAM,EAAEK,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBR,MAA9B;AAAsCC,MAAAA,iBAAiB,EAAE;AAAzD,KAAzB,CAAP;AACD;;AACD,MAAII,MAAM,CAACC,IAAP,KAAgBd,YAApB,EAAiC;AAC/B,WAAOiB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAAEJ,MAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaW,MAAb,CAAoBN,MAAM,CAACE,OAAP,CAAeC,IAAnC;AAAV,KAAzB,CAAP;AACD;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgBb,cAApB,EAAmC;AACjC,WAAOgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAAEF,MAAAA,aAAa,EAAEG,MAAM,CAACE,OAAP,CAAeC;AAAhC,KAAzB,CAAP;AACD,GA3B0D,CA4B3D;AACA;AACA;;;AACA,MAAIH,MAAM,CAACC,IAAP,KAAgBX,YAApB,EAAiC;AAC/B,WAAOc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAAEJ,MAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaY,MAAb,CAAoBC,KAAK,IAAIA,KAAK,CAACC,GAAN,KAAcT,MAAM,CAACE,OAAlD;AAAV,KAAzB,CAAP;AACD;;AACD,MAAIF,MAAM,CAACC,IAAP,KAAgBV,UAApB,EAA+B;AAC7BmB,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACE,OAAnB;AACA,WAAOE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAAEJ,MAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaW,MAAb,CAAoBN,MAAM,CAACE,OAAP,CAAeC,IAAnC;AAAV,KAAzB,CAAP;AACD;;AACD,SAAOJ,KAAP;AACD,CAvCM","sourcesContent":["import { REGISTER, LOGIN, LOGOUT, GET_USER, CREATE_BOARD, SELECTED_IMAGE, UPDATE_BOARD, DELETE_BOARD, EDIT_BOARD } from \"../constants/action-types\";\n\nconst initialState = {\n  loggedIn: false,\n  currentUser: null,\n  boards: [],\n  renderBoardDetail: false,\n  selectedImage: {},\n  };\n\n\nexport const rootReducer = (state = initialState, action) => {\n  if (action.type === REGISTER) {\n    return {\n      loggedIn: true,\n      currentUser: action.payload.data\n    } \n  }\n  if (action.type === LOGIN) {\n    return {\n      loggedIn: true,\n      currentUser: action.payload.data\n    } \n  }\n  if (action.type === LOGOUT) {\n    return {\n      loggedIn: false,\n      currentUser: null\n    } \n  }\n  if (action.type === GET_USER) {\n    return Object.assign({}, state, { boards: action.payload.data.boards, renderBoardDetail: true })\n  }\n  if (action.type === CREATE_BOARD){\n    return Object.assign({}, state, { boards: state.boards.concat(action.payload.data) });\n  }\n  if (action.type === SELECTED_IMAGE){\n    return Object.assign({}, state, { selectedImage: action.payload.data });\n  }\n  // if (action.type === UPDATE_BOARD){\n  //   return Object.assign({}, state, { boards: state.boards.concat(action.payload.data) });\n  // }\n  if (action.type === DELETE_BOARD){\n    return Object.assign({}, state, { boards: state.boards.filter(board => board._id !== action.payload) });\n  }\n  if (action.type === EDIT_BOARD){\n    console.log(action.payload)\n    return Object.assign({}, state, { boards: state.boards.concat(action.payload.data) });\n  }\n  return state;\n};\n\n\n"]},"metadata":{},"sourceType":"module"}