{"ast":null,"code":"var _jsxFileName = \"/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/js/components/BoardContainer/MakeBoard/MakeBoard.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Search from './Search';\nimport { Button } from 'reactstrap';\nimport { createBoard } from '../../../actions/actions';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createBoard: board => dispatch(createBoard(board))\n  };\n};\n\nclass ConnectedMakeBoard extends Component {\n  constructor() {\n    super();\n\n    this.clearState = nextProps => {\n      this.setState({\n        title: nextProps.title,\n        description: nextProps.description\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.createBoard(this.state);\n      this.setState({\n        title: '',\n        description: ''\n      });\n    };\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      images: [],\n      selectedImage: {}\n    };\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (!this.state.title) {\n      this.clearState();\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Create a New Board\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"*Title: \", React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"title\",\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Description: \", React.createElement(\"textarea\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"description\",\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"button\",\n      color: \"secondary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"* required\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Search, {\n      search: this.props.search,\n      results: this.props.results,\n      images: this.props.images,\n      imageStateChange: this.props.imageStateChange,\n      handleImageClick: this.props.handleImageClick,\n      updateBoard: this.props.updateBoard,\n      toggle: this.props.toggle,\n      modal: this.props.modal,\n      classChange: this.props.classChange,\n      handleImageSubmit: this.props.handleImageSubmit,\n      clearModal: this.props.clearModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst MakeBoard = connect(null, mapDispatchToProps)(ConnectedMakeBoard);\nexport default MakeBoard;","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/js/components/BoardContainer/MakeBoard/MakeBoard.jsx"],"names":["React","Component","connect","Search","Button","createBoard","mapDispatchToProps","dispatch","board","ConnectedMakeBoard","constructor","clearState","nextProps","setState","title","description","handleChange","e","target","name","value","handleSubmit","preventDefault","props","state","images","selectedImage","render","console","log","search","results","imageStateChange","handleImageClick","updateBoard","toggle","modal","classChange","handleImageSubmit","clearModal","MakeBoard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Search from './Search';\nimport { Button } from 'reactstrap';\nimport { createBoard } from '../../../actions/actions';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createBoard: board => dispatch(createBoard(board)),\n    }\n  };\n\nclass ConnectedMakeBoard extends Component {\n    constructor(){\n        super();\n        this.state = {\n            title: \"\",\n            description: \"\",\n            images: [],\n            selectedImage: {}\n        }\n    };\n    clearState = (nextProps) => {\n        this.setState({\n            title: nextProps.title,\n            description: nextProps.description,\n        })\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    };\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createBoard(this.state);\n        this.setState({\n            title: '',\n            description: '',\n        })\n    };\n\n    render(){\n        console.log(this.state)\n        if(!this.state.title){\n            this.clearState()\n        }\n        return (\n            <div>\n                <h1>Create a New Board</h1>\n                <form onSubmit={ this.handleSubmit }>\n                    <div>\n                        *Title: <input onChange={ this.handleChange } type=\"text\" name=\"title\" defaultValue=\"\" />\n                    </div>\n                    <div>\n                        Description: <textarea onChange={ this.handleChange } type=\"text\" name=\"description\" defaultValue=\"\" />\n                    </div>\n                    <div>\n                        <Button className=\"button\" color=\"secondary\" type=\"submit\">Submit</Button>\n                    </div>\n                    </form>\n\n                    <div>\n                        <small>* required</small>\n                    </div>\n                    <div>\n                        <Search search={this.props.search} results={this.props.results} images={this.props.images}\n                        \n                        imageStateChange={ this.props.imageStateChange } handleImageClick={ this.props.handleImageClick } \n                        updateBoard={ this.props.updateBoard } toggle={ this.props.toggle } modal={ this.props.modal } \n                        classChange={ this.props.classChange } handleImageSubmit={ this.props.handleImageSubmit } clearModal= { this.props.clearModal } />\n                    </div>\n\n            </div>\n\n        )\n    }\n\n}\n\nconst MakeBoard = connect(null, mapDispatchToProps)(ConnectedMakeBoard);\n\nexport default MakeBoard;"]},"metadata":{},"sourceType":"module"}