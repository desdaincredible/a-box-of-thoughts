{"ast":null,"code":"var _jsxFileName = \"/Users/moosesdeuces/sei-june-bug/5-10-image-board-creator/image-board-creator/front-end/src/BoardContainer/BoardContainer.jsx\";\nimport React, { Component } from 'react';\nimport MakeBoard from './MakeBoard/MakeBoard';\nimport BoardDetail from './BoardDetail/BoardDetail';\n\nclass BoardContainer extends Component {\n  constructor() {\n    super();\n\n    this.getBoards = async () => {\n      const boards = await fetch('http://localhost:9000/boards', {\n        credentials: 'include'\n      });\n      const boardsJSON = await boards.json();\n      this.setState({\n        boards: boardsJSON.data\n      });\n    };\n\n    this.createBoard = async formData => {\n      const newBoard = await fetch('http://localhost:9000/boards', {\n        credentials: 'include',\n        method: \"POST\",\n        body: JSON.stringify(formData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }); // console.log(newBoard, 'newBoard')\n\n      const parsedResponse = await newBoard.json();\n\n      if (newBoard.status === 200) {\n        this.setState({\n          boards: [...this.state.boards, parsedResponse]\n        });\n      }\n    };\n\n    this.selectedImageStateChange = newState => {\n      this.setState({\n        selectedImage: newState.selectedImage\n      });\n    };\n\n    this.imageStateChange = newState => {\n      this.setState({\n        images: newState.images\n      });\n    };\n\n    this.handleEditSubmit = () => {\n      this.state.boards.map(board => {\n        if (board._id) {\n          board.images = [...board.image, this.state.selectedImage];\n        }\n      });\n      this.setState({});\n      this.toggle();\n      this.updateBoard();\n    };\n\n    this.updateBoard = async (id, board) => {\n      board = await fetch(\"http://localhost:9000/boards/\".concat(id), {\n        method: \"PUT\",\n        body: JSON.stringify(board),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const updatedBoard = await board.json();\n      console.log(board, 'board');\n      console.log(updatedBoard, 'updatedBoard');\n      this.setState({\n        boards: [...this.state.boards, updatedBoard.data]\n      });\n    };\n\n    this.toggleClass = () => {\n      console.log(this.state.classChange, 'toggle class');\n      this.setState({\n        classChange: true\n      });\n    };\n\n    this.handleImageClick = (e, image) => {\n      this.setState({\n        selectedImage: e\n      });\n      this.imageStateChange(this.state);\n      this.toggleClass();\n    };\n\n    this.addNewImageButtonClick = (e, id) => {\n      this.state.boards.map(board => {\n        console.log(board._id, \"add new image button clicked\");\n        this.toggle();\n      });\n    };\n\n    this.state = {\n      classChange: false,\n      modal: false,\n      boards: [],\n      selectedImage: {}\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  componentDidMount() {\n    this.getBoards();\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    console.log(this.state.boards);\n    console.log(this.state.selectedImage);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"BoardContainer\"), React.createElement(BoardDetail, {\n      boards: this.state.boards,\n      addNewImageButtonClick: this.addNewImageButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(MakeBoard, {\n      createBoard: this.createBoard,\n      selectedImageStateChange: this.selectedImageStateChange,\n      handleImageClick: this.handleImageClick,\n      imageStateChange: this.imageStateChange,\n      updateBoard: this.updateBoard,\n      toggle: this.toggle,\n      modal: this.state.modal,\n      classChange: this.state.classChange,\n      handleEditSubmit: this.handleEditSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BoardContainer;","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/5-10-image-board-creator/image-board-creator/front-end/src/BoardContainer/BoardContainer.jsx"],"names":["React","Component","MakeBoard","BoardDetail","BoardContainer","constructor","getBoards","boards","fetch","credentials","boardsJSON","json","setState","data","createBoard","formData","newBoard","method","body","JSON","stringify","headers","parsedResponse","status","state","selectedImageStateChange","newState","selectedImage","imageStateChange","images","handleEditSubmit","map","board","_id","image","toggle","updateBoard","id","updatedBoard","console","log","toggleClass","classChange","handleImageClick","e","addNewImageButtonClick","modal","bind","componentDidMount","prevState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MakeBoard from './MakeBoard/MakeBoard';\nimport BoardDetail from './BoardDetail/BoardDetail';\n\nclass BoardContainer extends Component {\n    constructor(){\n        super();\n        this.state = {\n            classChange: false,\n            modal: false,\n            boards: [],\n            selectedImage: {},\n        }\n        this.toggle = this.toggle.bind(this);\n    }\n    componentDidMount(){\n        this.getBoards();\n    }\n    getBoards = async () => {\n        const boards = await fetch('http://localhost:9000/boards', {\n            credentials: 'include'\n        })\n        const boardsJSON = await boards.json();\n        this.setState({\n            boards: boardsJSON.data,\n        })\n    };\n    createBoard = async (formData) => {\n        const newBoard = await fetch('http://localhost:9000/boards', {\n            credentials: 'include',\n            method: \"POST\",\n            body: JSON.stringify(formData),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        // console.log(newBoard, 'newBoard')\n        const parsedResponse = await newBoard.json();\n        if(newBoard.status === 200){\n            this.setState({\n                boards: [...this.state.boards, parsedResponse]\n            })\n        }\n    };\n    selectedImageStateChange = (newState) => {\n        this.setState({\n            selectedImage: newState.selectedImage\n        })\n    };\n    imageStateChange = (newState) => {\n        this.setState({\n            images: newState.images\n        })\n    };\n    handleEditSubmit = ()=> {\n        this.state.boards.map((board) => {\n            if(board._id){\n                board.images = [...board.image, this.state.selectedImage]\n            }\n        })\n        this.setState({\n\n        })\n        this.toggle();\n        this.updateBoard();\n    };\n    updateBoard = async (id, board) => {\n        board = await fetch(`http://localhost:9000/boards/${id}`, {\n            method: \"PUT\",\n            body: JSON.stringify(board),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        const updatedBoard = await board.json();\n        console.log(board, 'board')\n        console.log(updatedBoard, 'updatedBoard')\n        this.setState({\n            boards: [...this.state.boards, updatedBoard.data],\n        })\n    }; \n    toggleClass = () => {\n        console.log(this.state.classChange, 'toggle class');\n        this.setState({\n            classChange: true\n        })\n    };\n    handleImageClick = (e, image) => {\n        this.setState({\n            selectedImage: e\n        })\n        this.imageStateChange(this.state);\n        this.toggleClass();\n    };\n    toggle(){\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    };\n    addNewImageButtonClick = (e, id) => {\n        this.state.boards.map((board) => {\n            console.log(board._id, \"add new image button clicked\")\n            this.toggle();\n        })\n    };\n\n    render(){\n        console.log(this.state.boards)\n        console.log(this.state.selectedImage)\n        return (\n            <div>\n            <h1>BoardContainer</h1>\n            <BoardDetail boards={ this.state.boards } addNewImageButtonClick={ this.addNewImageButtonClick } />\n            <MakeBoard createBoard={ this.createBoard } selectedImageStateChange={ this.selectedImageStateChange } \n            handleImageClick={ this.handleImageClick } imageStateChange={ this.imageStateChange } \n            updateBoard={ this.updateBoard } toggle={ this.toggle } modal={ this.state.modal } classChange={ this.state.classChange } \n            handleEditSubmit={ this.handleEditSubmit } />\n            </div>\n        )\n    }\n}\n\nexport default BoardContainer;"]},"metadata":{},"sourceType":"module"}