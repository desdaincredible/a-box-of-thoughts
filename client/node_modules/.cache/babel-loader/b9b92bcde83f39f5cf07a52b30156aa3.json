{"ast":null,"code":"import { REGISTER, LOGIN, LOGOUT, GET_USER, CREATE_BOARD, SELECTED_IMAGE, UPDATE_BOARD, DELETE_BOARD, EDIT_BOARD } from '../constants/action-types';\n\nconst mapStateToProps = state => {\n  return {\n    renderBoardDetail: state.renderBoardDetail,\n    boards: state.boards,\n    selectedImage: state.selectedImage\n  };\n};\n\nexport function handleRegister(formData) {\n  return function (dispatch) {\n    return fetch(\"http://localhost:9000/users\", {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: REGISTER,\n        payload: json\n      });\n    });\n  };\n}\n;\nexport function handleLogin(formData) {\n  return function (dispatch) {\n    return fetch('http://localhost:9000/users/login', {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: LOGIN,\n        payload: json\n      });\n    });\n  };\n}\n;\nexport function logout() {\n  return function (dispatch) {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n}\n;\nexport function getUser() {\n  return function (dispatch) {\n    return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/boards\"), {\n      credentials: 'include'\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: GET_USER,\n        payload: json\n      });\n    });\n  };\n}\n;\nexport function createBoard(formData) {\n  return function (dispatch) {\n    return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/boards\"), {\n      credentials: 'include',\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: CREATE_BOARD,\n        payload: json\n      });\n    });\n  };\n}\n;\nexport function selectedImageStateChange(newState) {\n  return {\n    type: SELECTED_IMAGE,\n    payload: newState\n  };\n}\n;\nexport function deleteBoard(foundBoard) {\n  return function (dispatch) {\n    return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/boards/\").concat(foundBoard), {\n      method: \"DELETE\"\n    }).then(dispatch({\n      type: DELETE_BOARD,\n      payload: foundBoard\n    }));\n  };\n}\n;\nexport function editBoard(editBoard) {\n  return function (dispatch) {\n    return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/boards/\").concat(this.state.editBoard), {\n      method: \"PUT\",\n      body: JSON.stringify(editBoard),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: EDIT_BOARD,\n        payload: json\n      });\n    });\n  };\n}\n; // export function updateBoard(foundBoard){\n//   return function(dispatch){\n//     // foundBoard.images.push(this.state.selectedImage);\n//     return fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards/${foundBoard._id}`, {\n//       method: \"PUT\",\n//       body: JSON.stringify(foundBoard),\n//       headers: {\n//           \"Content-Type\": \"application/json\"\n//       }\n//   })\n//     .then(res => { dispatch(updateBoard(foundBoard));\n//     });  \n//   }\n// };\n// export function updatedBoardToDisplay(foundBoard){\n//   return { type: UPDATE_BOARD, payload: foundBoard.json()\n//   };\n// };","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/js/actions/actions.js"],"names":["REGISTER","LOGIN","LOGOUT","GET_USER","CREATE_BOARD","SELECTED_IMAGE","UPDATE_BOARD","DELETE_BOARD","EDIT_BOARD","mapStateToProps","state","renderBoardDetail","boards","selectedImage","handleRegister","formData","dispatch","fetch","method","body","JSON","stringify","credentials","headers","then","response","json","type","payload","handleLogin","logout","getUser","process","env","REACT_APP_BACKEND_ADDRESS","createBoard","selectedImageStateChange","newState","deleteBoard","foundBoard","editBoard"],"mappings":"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","sourcesContent":["import { REGISTER, LOGIN, LOGOUT, GET_USER, CREATE_BOARD, SELECTED_IMAGE, UPDATE_BOARD, \n  DELETE_BOARD, EDIT_BOARD } from '../constants/action-types';\n\nconst mapStateToProps = state => {\n  return { \n      renderBoardDetail: state.renderBoardDetail, \n      boards: state.boards,\n      selectedImage: state.selectedImage,\n  }\n};\n\nexport function handleRegister(formData){\n    return function(dispatch){\n        return fetch(\"http://localhost:9000/users\", {\n            method: \"POST\",\n            body: JSON.stringify(formData),\n            credentials: 'include',\n            headers: {\n              \"Content-Type\": \"application/json\",\n            }\n          })\n            .then(response => response.json())\n            .then(json => { dispatch({ type: REGISTER, payload: json });\n        })\n    }\n};\n\nexport function handleLogin(formData){\n  return function(dispatch){\n    return fetch('http://localhost:9000/users/login', {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n      })\n        .then(response => response.json())\n        .then(json => { dispatch({ type: LOGIN, payload: json })})\n  }\n};\n\nexport function logout(){\n  return function(dispatch){\n    dispatch({ type: LOGOUT })\n  }\n};\n\nexport function getUser(){\n  return function(dispatch){\n    return fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards`, {\n      credentials: 'include'\n    })\n      .then(response => response.json())\n      .then(json => { dispatch({ type: GET_USER, payload: json })})\n  }\n};\n\nexport function createBoard(formData){\n  return function(dispatch){\n    return fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards`, {\n      credentials: 'include',\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: {\n          \"Content-Type\": \"application/json\"\n      }\n  })\n    .then(response => response.json())\n    .then(json => { dispatch({ type: CREATE_BOARD, payload: json })})\n  }\n};\n\nexport function selectedImageStateChange(newState){\n  return ({ type: SELECTED_IMAGE, payload: newState })\n};\n\nexport function deleteBoard(foundBoard){\n  return function(dispatch){\n    return fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards/${foundBoard}`, {\n      method: \"DELETE\",\n  })\n  .then( dispatch({ type: DELETE_BOARD, payload: foundBoard }))\n\n  }\n};\n\nexport function editBoard(editBoard){\n  return function(dispatch){\n    return fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards/${this.state.editBoard}`, {\n      method: \"PUT\",\n      body: JSON.stringify(editBoard),\n      headers: {\n          \"Content-Type\": \"application/json\"\n      }\n  })\n  .then(response => response.json())\n  .then(json => { dispatch({ type: EDIT_BOARD, payload: json })})  }\n};\n\n// export function updateBoard(foundBoard){\n//   return function(dispatch){\n//     // foundBoard.images.push(this.state.selectedImage);\n\n//     return fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards/${foundBoard._id}`, {\n//       method: \"PUT\",\n//       body: JSON.stringify(foundBoard),\n//       headers: {\n//           \"Content-Type\": \"application/json\"\n//       }\n//   })\n//     .then(res => { dispatch(updateBoard(foundBoard));\n//     });  \n//   }\n// };\n\n// export function updatedBoardToDisplay(foundBoard){\n//   return { type: UPDATE_BOARD, payload: foundBoard.json()\n//   };\n// };\n\n"]},"metadata":{},"sourceType":"module"}