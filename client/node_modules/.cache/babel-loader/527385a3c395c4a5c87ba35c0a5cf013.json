{"ast":null,"code":"import { REGISTER, LOGIN, LOGOUT, GET_USER, CREATE_BOARD, SELECTED_IMAGE, UPDATE_BOARD } from \"../constants/action-types\";\nconst initialState = {\n  loggedIn: false,\n  currentUser: null,\n  boards: [],\n  renderBoardDetail: false\n};\nexport const rootReducer = (state = initialState, action) => {\n  if (action.type === REGISTER) {\n    return {\n      loggedIn: true,\n      currentUser: action.payload.data\n    };\n  }\n\n  if (action.type === LOGIN) {\n    return {\n      loggedIn: true,\n      currentUser: action.payload.data\n    };\n  }\n\n  if (action.type === LOGOUT) {\n    return {\n      loggedIn: false,\n      currentUser: null\n    };\n  }\n\n  if (action.type === GET_USER) {\n    return Object.assign({}, state, {\n      boards: action.payload.data.boards,\n      renderBoardDetail: true\n    });\n  }\n\n  if (action.type === CREATE_BOARD) {\n    return Object.assign({}, state, {\n      boards: state.boards.concat(action.payload.data)\n    });\n  }\n\n  if (action.type === SELECTED_IMAGE) {\n    return Object.assign({}, state, {\n      selectedImage: action.payload.data\n    });\n  }\n\n  if (action.type === UPDATE_BOARD) {\n    return Object.assign({}, state, {\n      boards: state.boards.concat(action.payload.data)\n    });\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/js/reducers/reducers.js"],"names":["REGISTER","LOGIN","LOGOUT","GET_USER","CREATE_BOARD","SELECTED_IMAGE","UPDATE_BOARD","initialState","loggedIn","currentUser","boards","renderBoardDetail","rootReducer","state","action","type","payload","data","Object","assign","concat","selectedImage"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,YAA5C,EAA0DC,cAA1D,EAA0EC,YAA1E,QAA8F,2BAA9F;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,KADS;AAEnBC,EAAAA,WAAW,EAAE,IAFM;AAGnBC,EAAAA,MAAM,EAAE,EAHW;AAInBC,EAAAA,iBAAiB,EAAE;AAJA,CAArB;AAQA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC3D,MAAIA,MAAM,CAACC,IAAP,KAAgBf,QAApB,EAA8B;AAC5B,WAAO;AACLQ,MAAAA,QAAQ,EAAE,IADL;AAELC,MAAAA,WAAW,EAAEK,MAAM,CAACE,OAAP,CAAeC;AAFvB,KAAP;AAID;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgBd,KAApB,EAA2B;AACzB,WAAO;AACLO,MAAAA,QAAQ,EAAE,IADL;AAELC,MAAAA,WAAW,EAAEK,MAAM,CAACE,OAAP,CAAeC;AAFvB,KAAP;AAID;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgBb,MAApB,EAA4B;AAC1B,WAAO;AACLM,MAAAA,QAAQ,EAAE,KADL;AAELC,MAAAA,WAAW,EAAE;AAFR,KAAP;AAID;;AACD,MAAIK,MAAM,CAACC,IAAP,KAAgBZ,QAApB,EAA8B;AAC5B,WAAOe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAAEH,MAAAA,MAAM,EAAEI,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBP,MAA9B;AAAsCC,MAAAA,iBAAiB,EAAE;AAAzD,KAAzB,CAAP;AACD;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgBX,YAApB,EAAiC;AAC/B,WAAOc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAAEH,MAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAaU,MAAb,CAAoBN,MAAM,CAACE,OAAP,CAAeC,IAAnC;AAAV,KAAzB,CAAP;AACD;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgBV,cAApB,EAAmC;AACjC,WAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAAEQ,MAAAA,aAAa,EAAEP,MAAM,CAACE,OAAP,CAAeC;AAAhC,KAAzB,CAAP;AACD;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgBT,YAApB,EAAiC;AAC/B,WAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAAEH,MAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAaU,MAAb,CAAoBN,MAAM,CAACE,OAAP,CAAeC,IAAnC;AAAV,KAAzB,CAAP;AACD;;AACD,SAAOJ,KAAP;AACD,CAhCM","sourcesContent":["import { REGISTER, LOGIN, LOGOUT, GET_USER, CREATE_BOARD, SELECTED_IMAGE, UPDATE_BOARD } from \"../constants/action-types\";\n\nconst initialState = {\n  loggedIn: false,\n  currentUser: null,\n  boards: [],\n  renderBoardDetail: false,\n  };\n\n\nexport const rootReducer = (state = initialState, action) => {\n  if (action.type === REGISTER) {\n    return {\n      loggedIn: true,\n      currentUser: action.payload.data\n    } \n  }\n  if (action.type === LOGIN) {\n    return {\n      loggedIn: true,\n      currentUser: action.payload.data\n    } \n  }\n  if (action.type === LOGOUT) {\n    return {\n      loggedIn: false,\n      currentUser: null\n    } \n  }\n  if (action.type === GET_USER) {\n    return Object.assign({}, state, { boards: action.payload.data.boards, renderBoardDetail: true })\n  }\n  if (action.type === CREATE_BOARD){\n    return Object.assign({}, state, { boards: state.boards.concat(action.payload.data) });\n  }\n  if (action.type === SELECTED_IMAGE){\n    return Object.assign({}, state, { selectedImage: action.payload.data });\n  }\n  if (action.type === UPDATE_BOARD){\n    return Object.assign({}, state, { boards: state.boards.concat(action.payload.data) });\n  }\n  return state;\n};\n\n"]},"metadata":{},"sourceType":"module"}