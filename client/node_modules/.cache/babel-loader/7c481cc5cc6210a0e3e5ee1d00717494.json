{"ast":null,"code":"import { REGISTER, LOGIN, LOGOUT, GET_USER, CREATE_BOARD } from '../constants/action-types';\nexport function handleRegister(formData) {\n  return function (dispatch) {\n    return fetch(\"http://localhost:9000/users\", {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: REGISTER,\n        payload: json\n      });\n    });\n  };\n}\n;\nexport function handleLogin(formData) {\n  return function (dispatch) {\n    return fetch('http://localhost:9000/users/login', {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: LOGIN,\n        payload: json\n      });\n    });\n  };\n}\n;\nexport function logout() {\n  return function (dispatch) {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n}\n;\nexport function getUser() {\n  return function (dispatch) {\n    return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/boards\"), {\n      credentials: 'include'\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: GET_USER,\n        payload: json\n      });\n    });\n  };\n}\n;\nexport function createBoard(formData) {\n  return function (dispatch) {\n    return fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/boards\"), {\n      credentials: 'include',\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(json => {\n      dispatch({\n        type: CREATE_BOARD,\n        payload: json\n      });\n    });\n  };\n}\n;\nexport function selectedImageStateChange(newState) {\n  return newState.then(newStateChange => {\n    dispatch({\n      type: SELECTED_IMAGE,\n      payload: newStateChange\n    });\n  });\n}\n;","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/js/actions/actions.js"],"names":["REGISTER","LOGIN","LOGOUT","GET_USER","CREATE_BOARD","handleRegister","formData","dispatch","fetch","method","body","JSON","stringify","credentials","headers","then","response","json","type","payload","handleLogin","logout","getUser","process","env","REACT_APP_BACKEND_ADDRESS","createBoard","selectedImageStateChange","newState","newStateChange","SELECTED_IMAGE"],"mappings":"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","sourcesContent":["import { REGISTER, LOGIN, LOGOUT, GET_USER, CREATE_BOARD } from '../constants/action-types';\n\n\nexport function handleRegister(formData){\n    return function(dispatch){\n        return fetch(\"http://localhost:9000/users\", {\n            method: \"POST\",\n            body: JSON.stringify(formData),\n            credentials: 'include',\n            headers: {\n              \"Content-Type\": \"application/json\",\n            }\n          })\n            .then(response => response.json())\n            .then(json => { dispatch({ type: REGISTER, payload: json });\n        })\n    }\n};\n\nexport function handleLogin(formData){\n  return function(dispatch){\n    return fetch('http://localhost:9000/users/login', {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n      })\n        .then(response => response.json())\n        .then(json => { dispatch({ type: LOGIN, payload: json })})\n  }\n};\n\nexport function logout(){\n  return function(dispatch){\n    dispatch({ type: LOGOUT })\n  }\n};\n\nexport function getUser(){\n  return function(dispatch){\n    return fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards`, {\n      credentials: 'include'\n    })\n      .then(response => response.json())\n      .then(json => { dispatch({ type: GET_USER, payload: json })})\n  }\n};\n\nexport function createBoard(formData){\n  return function(dispatch){\n    return fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/boards`, {\n      credentials: 'include',\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: {\n          \"Content-Type\": \"application/json\"\n      }\n  })\n    .then(response => response.json())\n    .then(json => { dispatch({ type: CREATE_BOARD, payload: json })})\n  }\n};\n\nexport function selectedImageStateChange(newState){\n  return newState\n  .then(newStateChange => { dispatch({ type: SELECTED_IMAGE, payload: newStateChange })})\n};"]},"metadata":{},"sourceType":"module"}