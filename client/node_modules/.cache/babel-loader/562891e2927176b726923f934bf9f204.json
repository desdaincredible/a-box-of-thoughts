{"ast":null,"code":"var _jsxFileName = \"/Users/moosesdeuces/sei-june-bug/5-10-image-board-creator/image-board-creator/front-end/src/BoardContainer/MakeBoard/MakeBoard.jsx\";\nimport React, { Component } from 'react';\nimport Search from './Search';\nimport Axios from 'axios';\n\nclass MakeBoard extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      // e.preventDefault;\n      // e.target.reset();\n      this.setState({\n        name: null,\n        description: null\n      });\n      this.props.createBoard(this.state);\n    };\n\n    this.handleSearchSubmit = e => {\n      this.setState({\n        images: [...this.state.images, this.state.imageSearchTerm]\n      });\n    };\n\n    this.searchImages = () => {\n      Axios({\n        method: 'get',\n        url: 'https://api.unsplash.com/search/photos',\n        params: {\n          client_id: '1fe232c10d045efb942c686798a897086057edb740c100d8ee47adf69d77c998',\n          query: this.state.search,\n          per_page: 9,\n          page: this.state.currentPage\n        }\n      }).then(reponse => {\n        console.log(reponse);\n        this.setState({\n          results: reponse.data\n        });\n      }).then(showResults => {\n        this.handleSearchResults();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleSearchResults = () => {\n      const searchResultsArray = this.state.results.results;\n      console.log(searchResultsArray);\n      const imageSearchList = searchResultsArray.map(result => {\n        this.setState({\n          images: [...this.state.images, result.urls.regular]\n        });\n      });\n    };\n\n    this.handleSearchSubmit = e => {\n      e.preventDefault();\n      this.searchImages(this.state);\n    };\n\n    this.createImage = async query => {\n      const newImage = await fetch(\"https://api.unsplash.com/search/photos/?page=1&per_page=10&query=\".concat(query, \"&client_id=1fe232c10d045efb942c686798a897086057edb740c100d8ee47adf69d77c998\"), {\n        credentials: 'include',\n        method: \"POST\",\n        body: JSON.stringify(query),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const parsedResponse = await newImage.json();\n\n      if (newImage.status === 200) {\n        this.setState({\n          images: [...this.state.boards.image, parsedResponse]\n        });\n      }\n\n      console.log(this.state.boards, 'this.state.boards');\n      console.log(this.state.boards.images, 'this.state.boards.images');\n    };\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      search: \"\",\n      results: [],\n      images: [],\n      currentPage: 1\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Create a New Board\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"*Title: \", React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Description: \", React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"* required\"))), React.createElement(\"form\", {\n      onSubmit: this.handleSearchSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Search, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MakeBoard;","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/5-10-image-board-creator/image-board-creator/front-end/src/BoardContainer/MakeBoard/MakeBoard.jsx"],"names":["React","Component","Search","Axios","MakeBoard","constructor","handleChange","e","setState","target","name","value","handleSubmit","description","props","createBoard","state","handleSearchSubmit","images","imageSearchTerm","searchImages","method","url","params","client_id","query","search","per_page","page","currentPage","then","reponse","console","log","results","data","showResults","handleSearchResults","catch","err","searchResultsArray","imageSearchList","map","result","urls","regular","preventDefault","createImage","newImage","fetch","credentials","body","JSON","stringify","headers","parsedResponse","json","status","boards","image","title","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Search from './Search';\nimport Axios from 'axios';\n\n\nclass MakeBoard extends Component {\n    constructor(){\n        super();\n        this.state = {\n            title: \"\",\n            description: \"\",\n            search: \"\",\n            results: [],\n            images: [],\n            currentPage: 1        }\n    };\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    };\n    handleSubmit = (e) => {\n        // e.preventDefault;\n        // e.target.reset();\n        this.setState({\n            name: null,\n            description: null\n        })\n        this.props.createBoard(this.state);\n    };\n    handleSearchSubmit = (e) => {\n        this.setState({\n            images: [...this.state.images, this.state.imageSearchTerm]\n        })\n    };\n// search crap\nsearchImages = () => {\n    Axios({\n      method: 'get',\n      url: 'https://api.unsplash.com/search/photos',\n      params: {\n        client_id: '1fe232c10d045efb942c686798a897086057edb740c100d8ee47adf69d77c998', \n        query: this.state.search,\n        per_page: 9,\n        page: this.state.currentPage,\n      }\n    })\n    .then(reponse => {\n        console.log(reponse);\n        this.setState({results: reponse.data});\n      })\n    .then(showResults => {\n        this.handleSearchResults();\n    })\n    .catch(err => {\n        console.log(err);\n    })\n};\nhandleSearchResults = () => {\n    const searchResultsArray = this.state.results.results;\n    console.log(searchResultsArray)\n    const imageSearchList = searchResultsArray.map((result) => {\n        this.setState({\n            images: [...this.state.images, result.urls.regular]\n        })\n    })\n};\nhandleSearchSubmit = (e) => {\n    e.preventDefault();\n    this.searchImages(this.state);\n};\n// end of search crap\n\n\n\n    // refactor for this component\n    createImage = async (query) => {\n        const newImage = await fetch(`https://api.unsplash.com/search/photos/?page=1&per_page=10&query=${query}&client_id=1fe232c10d045efb942c686798a897086057edb740c100d8ee47adf69d77c998`, {\n            credentials: 'include',\n            method: \"POST\",\n            body: JSON.stringify(query),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        const parsedResponse = await newImage.json();\n        if(newImage.status === 200){\n            this.setState({\n                images: [...this.state.boards.image, parsedResponse]\n            })\n        }\n        console.log(this.state.boards, 'this.state.boards')\n        console.log(this.state.boards.images, 'this.state.boards.images')\n\n    };\n    render(){\n        return (\n            <div>\n                <h1>Create a New Board</h1>\n                <form onSubmit={ this.handleSubmit }>\n                    <div>\n                        *Title: <input onChange={ this.handleChange } type=\"text\" name=\"title\" />\n                    </div>\n                    <div>\n                        Description: <input onChange={ this.handleChange } type=\"text\" name=\"description\" />\n                    </div>\n                    <div>\n                        <input type=\"submit\" />\n                    </div>\n                    <div>\n                        <small>* required</small>\n                    </div>\n                </form>\n                <form onSubmit={ this.handleSearchSubmit }>\n                    <div>\n                        <Search />\n                    </div>\n                    <div>\n                        <input type=\"submit\" />\n                    </div>\n\n                </form>\n            </div>\n\n        )\n    }\n\n}\n\nexport default MakeBoard;"]},"metadata":{},"sourceType":"module"}