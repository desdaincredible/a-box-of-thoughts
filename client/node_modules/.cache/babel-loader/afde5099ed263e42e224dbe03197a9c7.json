{"ast":null,"code":"import _objectSpread from \"/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { REGISTER, LOGIN, LOGOUT, GET_USER, CREATE_BOARD, SELECTED_IMAGE, UPDATE_BOARD, DELETE_BOARD, EDIT_BOARD, SEARCH_IMAGES } from \"../constants/action-types\";\nconst initialState = {\n  loggedIn: false,\n  currentUser: null,\n  boards: [],\n  renderBoardDetail: false,\n  selectedImage: {},\n  searchResults: [],\n  currentPage: 1\n};\nexport const rootReducer = (state = initialState, action) => {\n  if (action.type === REGISTER) {\n    return {\n      loggedIn: true,\n      currentUser: action.payload.data\n    };\n  }\n\n  if (action.type === LOGIN) {\n    return {\n      loggedIn: true,\n      currentUser: action.payload.data\n    };\n  }\n\n  if (action.type === LOGOUT) {\n    return {\n      loggedIn: false,\n      currentUser: null\n    };\n  }\n\n  if (action.type === GET_USER) {\n    return Object.assign({}, state, {\n      boards: action.payload.data.boards,\n      renderBoardDetail: true\n    });\n  }\n\n  if (action.type === CREATE_BOARD) {\n    return Object.assign({}, state, {\n      boards: state.boards.concat(action.payload.data)\n    });\n  }\n\n  if (action.type === SELECTED_IMAGE) {\n    return Object.assign({}, state, {\n      selectedImage: action.payload.data\n    });\n  }\n\n  if (action.type === DELETE_BOARD) {\n    return Object.assign({}, state, {\n      boards: state.boards.filter(board => board._id !== action.payload)\n    });\n  }\n\n  if (action.type === UPDATE_BOARD) {\n    const addNewBoard = state.boards.map(board => {\n      if (board._id === action.payload.id) {\n        return _objectSpread({}, board, {\n          title: action.payload.title,\n          description: action.payload.description\n        });\n      } else return board;\n    });\n    console.log(addNewBoard);\n    return Object.assign({}, state, {\n      boards: addNewBoard\n    });\n  }\n\n  if (action.type === SEARCH_IMAGES) {\n    console.log(action.payload); // return Object.assign({}, state, { searchResults: action.payload });\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/Users/moosesdeuces/sei-june-bug/6-5-box-of-thoughts-redux/box-of-thoughts-redux/client/src/js/reducers/reducers.js"],"names":["REGISTER","LOGIN","LOGOUT","GET_USER","CREATE_BOARD","SELECTED_IMAGE","UPDATE_BOARD","DELETE_BOARD","EDIT_BOARD","SEARCH_IMAGES","initialState","loggedIn","currentUser","boards","renderBoardDetail","selectedImage","searchResults","currentPage","rootReducer","state","action","type","payload","data","Object","assign","concat","filter","board","_id","addNewBoard","map","id","title","description","console","log"],"mappings":"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","sourcesContent":["import { REGISTER, LOGIN, LOGOUT, GET_USER, CREATE_BOARD, SELECTED_IMAGE, UPDATE_BOARD, DELETE_BOARD, EDIT_BOARD, SEARCH_IMAGES } from \"../constants/action-types\";\n\nconst initialState = {\n  loggedIn: false,\n  currentUser: null,\n  boards: [],\n  renderBoardDetail: false,\n  selectedImage: {},\n  searchResults: [],\n  currentPage: 1,\n  };\n\n\nexport const rootReducer = (state = initialState, action) => {\n  if (action.type === REGISTER) {\n    return {\n      loggedIn: true,\n      currentUser: action.payload.data\n    } \n  }\n  if (action.type === LOGIN) {\n    return {\n      loggedIn: true,\n      currentUser: action.payload.data\n    } \n  }\n  if (action.type === LOGOUT) {\n    return {\n      loggedIn: false,\n      currentUser: null\n    } \n  }\n  if (action.type === GET_USER) {\n    return Object.assign({}, state, { boards: action.payload.data.boards, renderBoardDetail: true })\n  }\n  if (action.type === CREATE_BOARD){\n    return Object.assign({}, state, { boards: state.boards.concat(action.payload.data) });\n  }\n  if (action.type === SELECTED_IMAGE){\n    return Object.assign({}, state, { selectedImage: action.payload.data });\n  }\n  if (action.type === DELETE_BOARD){\n    return Object.assign({}, state, { boards: state.boards.filter(board => board._id !== action.payload) });\n  }\n  if (action.type === UPDATE_BOARD){\n    const addNewBoard = state.boards.map((board) => {\n      if(board._id === action.payload.id){\n        return {...board, title: action.payload.title, description: action.payload.description}\n      } else return board\n    })\n    console.log(addNewBoard)\n    return Object.assign({}, state, { boards: addNewBoard })\n  }\n  if (action.type === SEARCH_IMAGES){\n    console.log(action.payload)\n    // return Object.assign({}, state, { searchResults: action.payload });\n  }\n  \n\n  return state;\n};\n\n"]},"metadata":{},"sourceType":"module"}